{"version":3,"sources":["webpack://ChapterMapComponent/webpack/universalModuleDefinition","webpack://ChapterMapComponent/webpack/bootstrap","webpack://ChapterMapComponent/./node_modules/d3-geo/src/adder.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/math.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/noop.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/stream.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/area.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/cartesian.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/bounds.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/centroid.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/constant.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/compose.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/rotation.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/circle.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/clip/buffer.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/clip/line.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/pointEqual.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/clip/polygon.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/clip/extent.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/length.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/polygonContains.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/distance.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/contains.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/graticule.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/interpolate.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/path/area.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/identity.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/path/bounds.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/path/centroid.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/path/context.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/path/measure.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/path/string.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/path/index.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/clip/index.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/clip/circle.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/transform.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/fit.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/resample.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/index.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/conic.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/albers.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/mercator.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/conicConformal.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/gnomonic.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/identity.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/orthographic.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/stereographic.js","webpack://ChapterMapComponent/./node_modules/d3-geo/src/projection/transverseMercator.js","webpack://ChapterMapComponent/./node_modules/d3-geo/index.js","webpack://ChapterMapComponent/external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://ChapterMapComponent/external {\"root\":\"PropTypes\",\"commonjs\":\"prop-types\",\"commonjs2\":\"prop-types\",\"amd\":\"prop-types\"}","webpack://ChapterMapComponent/./node_modules/d3-array/src/ascending.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/bisect.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/bisector.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/cross.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/array.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/range.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/ticks.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/threshold/sturges.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/merge.js","webpack://ChapterMapComponent/./node_modules/d3-array/src/index.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/index.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/utils.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/MapGroup.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/projectionConfig.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/ComposableMap.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/projections.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/ZoomableGroup.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/ZoomableGlobe.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Geographies.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Geography.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Marker.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Markers.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Line.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Lines.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Annotation.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Annotations.js","webpack://ChapterMapComponent/./node_modules/react-simple-maps/lib/Graticule.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/math.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/airy.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/aitoff.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/armadillo.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/august.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/baker.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/berghaus.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/mollweide.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/boggs.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/parallel1.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/sinusoidal.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/bonne.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/bottomley.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/bromley.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/chamberlin.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/collignon.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/craig.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/craster.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/cylindricalEqualArea.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/cylindricalStereographic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/eckert1.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/eckert2.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/eckert3.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/eckert4.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/eckert5.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/eckert6.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/eisenlohr.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/fahey.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/foucaut.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/gilbert.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/gingery.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/ginzburgPolyconic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/ginzburg4.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/ginzburg5.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/ginzburg6.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/ginzburg8.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/ginzburg9.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/square.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/gringorten.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/elliptic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/guyou.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/hammer.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/healpix.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/hill.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/sinuMollweide.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/homolosine.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/interrupted/index.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/interrupted/boggs.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/interrupted/homolosine.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/interrupted/mollweide.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/interrupted/sinusoidal.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/kavrayskiy7.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/lagrange.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/larrivee.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/laskowski.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/littrow.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/loximuthal.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/miller.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/modifiedStereographic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/naturalEarth.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/nellHammer.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/patterson.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/polyconic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/polyhedral/matrix.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/polyhedral/index.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/polyhedral/octahedron.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/polyhedral/butterfly.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/polyhedral/collignon.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/polyhedral/waterman.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/noop.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/project/index.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/project/clockwise.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/project/contains.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/quincuncial/index.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/quincuncial/gringorten.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/quincuncial/peirce.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/quantize.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/rectangularPolyconic.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/robinson.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/satellite.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/stitch.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/times.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/twoPoint.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/twoPointAzimuthal.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/twoPointEquidistant.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/vanDerGrinten.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/vanDerGrinten2.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/vanDerGrinten3.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/vanDerGrinten4.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/wagner4.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/wagner6.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/wagner7.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/wiechel.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/src/winkel3.js","webpack://ChapterMapComponent/./node_modules/d3-geo-projection/index.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/identity.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/transform.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/bbox.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/reverse.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/feature.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/stitch.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/mesh.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/merge.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/bisect.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/neighbors.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/quantize.js","webpack://ChapterMapComponent/./node_modules/topojson-client/src/untransform.js","webpack://ChapterMapComponent/./node_modules/topojson-client/index.js","webpack://ChapterMapComponent/./src/map_data.js","webpack://ChapterMapComponent/./src/SvgContentElementWrapperWithDefs.js","webpack://ChapterMapComponent/./src/GWUMarker.js","webpack://ChapterMapComponent/./src/ChapterMapComponent.js","webpack://ChapterMapComponent/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","adder","Adder","reset","constructor","add","y","temp","valueOf","a","b","x","bv","av","epsilon","pi","Math","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","ceil","exp","log","floor","pow","sin","math_sign","sign","sqrt","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","type","streamObjectType","Feature","FeatureCollection","features","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","bounds_linePoint","normal","inflection","phii","delta","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","merged","deltaMax","Infinity","sort","NaN","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","centroid","constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","src_circle","ring","center","precision","circle","apply","arguments","_","buffer","line","lines","rejoin","pop","concat","shift","result","clip_line","x0","y0","x1","y1","ax","ay","dx","dy","pointEqual","Intersection","points","other","entry","e","clip_polygon","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","polygon_link","start","current","isSubject","array","clipMax","clipMin","extent_clipExtent","visible","from","to","a1","corner","comparePoint","ca","cb","polygon","x__","y__","v__","x_","y_","v_","first","clean","activeStream","bufferStream","clipStream","linePoint","winding","a0","j","b0","b1","polygonInside","cleanInside","src","max","min","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","extent","sum","polygonContains","angle","point0","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","phi1","absDelta","arc","intersection","phiArc","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","map","ringRadians","pointRadians","contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","X","Y","DX","DY","graticule","filter","outline","slice","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","A","identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","join","src_path","projection","projectionStream","contextStream","path","src_clip","pointVisible","clipLine","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","ringSegments","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clip_circle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","polar","q1","code","c0","v0","v00","point2","src_transform","methods","transformer","TransformStream","fitExtent","h","clipExtent","scale","translate","fitSize","size","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","projection_projection","projectionMutator","projectAt","projectRotate","theta","preclip","postclip","projectResample","projectTransform","recenter","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","f","fy","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","g","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate","kx","ky","tx","ty","projection_identity","sx","sy","transform","reflectX","reflectY","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","__webpack_exports__","ascending","compare","array_array","Array","stop","merge","arrays","_ComposableMap","_interopRequireDefault","default","_ZoomableGroup","_ZoomableGlobe","_Geographies","_Geography","_Marker","_Markers","_Line","_Lines","_MapGroup","_Annotation","_Annotations","_Graticule","obj","calculateResizeFactor","actualDimension","baseDimension","calculateMousePosition","props","zoom","resizeFactor","undefined","width","height","reference","canRotate","reverseRotation","item","returner","isChildOfType","createNewChildren","children","child","_react2","cloneElement","groupName","itemName","roundPath","replace","round","createConnectorPath","connectorType","endPoint","curve","e0","e1","createTextAnchor","computeBackdrop","backdrop","originalRotation","tl","br","_react","expectedTypes","indexOf","componentIdentifier","_createClass","defineProperties","target","descriptor","configurable","writable","Constructor","protoProps","staticProps","MapGroup","_Component","instance","TypeError","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","setPrototypeOf","_inherits","Component","_props","style","createElement","className","defaultProps","xOffset","yOffset","_projections2","_projectionConfig2","ComposableMap","_this","projectionConfig","_props2","showCenter","aspectRatio","viewBox","defs","preserveAspectRatio","fill","config","projectionName","baseProjection","projectionReference","_d3GeoProjection","_d3Geo","_projectionConfig","geoMercator","miller","geoMiller","times","geoTimes","robinson","geoRobinson","winkel3","geoWinkel3","eckert4","geoEckert4","geoAlbersUsa","geoOrthographic","_utils","ZoomableGroup","state","mouseX","mouseY","mouseXStart","mouseYStart","isPressed","resizeFactorX","resizeFactorY","handleMouseMove","handleMouseUp","handleMouseDown","handleTouchStart","handleTouchMove","handleResize","_ref","pageX","pageY","disablePanning","setState","_ref2","touches","onMoveEnd","_state","_ref3","_state2","onMoveStart","_ref4","evt","preventDefault","nextProps","_state3","_props3","zoomFactor","centerChanged","JSON","stringify","_props4","zoomableGroupNode","parentNode","getBoundingClientRect","xPercentageChange","yPercentageChange","_props5","window","addEventListener","preventTouchScroll","removeEventListener","_this2","_props6","_state4","ref","onMouseMove","onMouseUp","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","strokeWidth","ZoomableGlobe","initialRotation","clientX","clientY","differenceX","differenceY","sensitivity","newCenter","currentCenter","zoomableGlobeNode","_topojsonClient","Geographies","geographyPaths","shouldFetchGeographies","geography","parseGeographies","fetchGeographies","nextState","disableOptimization","geographyUrl","console","warn","cancelPendingRequest","isArray","toString","objects","keys","request","XMLHttpRequest","open","onload","status","parse","responseText","onGeographyPathsLoaded","String","onerror","send","_xhr","abort","_extends","assign","source","pathCache","Geography","hover","pressed","handleMouseEnter","handleMouseLeave","handleMouseClick","handleFocus","handleBlur","persist","onClick","onMouseEnter","onMouseLeave","_props7","onFocus","_props8","onBlur","_props9","cacheId","tabable","pathString","geoPath","renderPath","excludeProps","restProps","reduce","tabIndex","Marker","marker","preserveMarkerAspect","translation","lineString","isHidden","geoLength","_MapGroup2","Markers","_objectWithoutProperties","Line","end","buildPath","buildLineString","startLineString","endLineString","Lines","Annotation","hiddenStyle","stroke","markerEnd","connectorPath","textAnchor","Annotations","computeGraticule","geoGraticule","computeOutline","Graticule","renderGraticule","graticulePath","outlinePath","globe","pointerEvents","math_epsilon","epsilon2","sqrt1_2","SQRT1_2","sqrt2","sqrtPi","sinh","cosh","airyRaw","beta","tanBeta_2","cosx","cosy","siny","cosz","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","airy","d3_geo","aitoffRaw","sincia","sinci","sinx","sinx_2","cosx_2","sin_2y","sin2y","cos2y","sin2x_2","fx","dxdx","dxdy","dydx","dydy","aitoff","armadilloRaw","sPhi0","tanPhi0","cosLambda","sinLambda","dxdLambda","dxdPhi","dydLambda","dydPhi","denominator","dPhi","armadillo","stream_","parallel","rotateStream","sphereStream","augustRaw","tanPhi","sin3Eta","eta","xi","arcosh","arsinh","cosEta","coshXi","august","sqrt8","baker_phi0","bakerRaw","cosPhi_2","tanPhi_2","baker","berghausRaw","lobes","theta0","α","cotα","berghaus","sr","delta0","mollweideBromleyTheta","cp","cpsinPhi","mollweideBromleyRaw","mollweideRaw","mollweide","boggs_k","boggs_w","boggsRaw","boggs","parallel1","sinusoidalRaw","sinusoidal","bonneRaw","cotPhi0","rho","bonne","bottomleyRaw","sinPsi","bottomley","fraction","bromleyRaw","bromley","chamberlin_distance","s1","s2","cosdLambda","sindPhi","sindLambda","longitude","chamberlinRaw","p2","beta0","beta1","beta2","mean","chamberlinAfrica","chamberlin","R","collignonRaw","alpha","collignon","craigRaw","cosλ","craig","sqrt3","crasterRaw","craster","cylindricalEqualArea","cylindricalStereographicRaw","cylindricalStereographic","eckert1Raw","eckert1","eckert2Raw","eckert2","eckert3Raw","eckert3","eckert4Raw","eckert5Raw","eckert5","eckert6Raw","eckert6","eisenlohrK","eisenlohrRaw","s0","_0","_1","cos1","v2","vm1v","vp1v","deltatDeltaLambda","deltatDeltaPhi","deltacDeltat","deltacDeltaLambda","deltacDeltaPhi","deltavDeltaLambda","deltavDeltaPhi","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","eisenlohr","faheyK","faheyRaw","fahey","foucautRaw","cosk","foucaut","gilbertForward","gilbertInvert","src_gilbert","projectionType","gilbert","gingeryRaw","rho2","r2","rhoCosAlpha","k_","s_","gingeryLength","gingeryIntegrate","dTheta","x_halfPi","rhosinAlpha","sinRhoCosAlpha","halfPi_RhoCosAlpha","gingery","cRho","sRho","ginzburgPolyconic","xB","yB","m2","dAlphadLambda","xB2","dxBdPhi","dyBdPhi","dmdPhi","cosAlpha","sinAlpha","mcosAlpha","msinAlpha","dAlphadPhi","ginzburg4Raw","ginzburg4","ginzburg5Raw","ginzburg5","ginzburg6Raw","ginzburg6","ginzburg8Raw","lambda4","ginzburg8","ginzburg9Raw","ginzburg9","square","projectSquare","location","gringortenRaw","sLambda","sPhi","a2","secPhi","drdPhi","dp2dPhi","mu","nu","zeta","g2","zetaMug","f2","df","gringortenHexadecant","gringortenHexadecantInvert","gringorten","ellipticJ","ai","twon","ellipticF","guyouRaw","K","psi","at","y_1","guyouComplexAtan","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticFi","tn","guyouComplexDivide","guyou","hammerRaw","hammerQuarticAuthalicRaw","hammer","coefficient","hammerRetroazimuthalRaw","hammerRetroazimuthalRotation","hammerRetroazimuthal","rotate_","healpixParallel","healpixLambert","healpixRaw","H","dy1","healpix","hillRaw","L","Bt","rho0","K2","L2","omega","sinTheta","cosTheta","Bt_Bt1","C","hill","ratio","sinuMollweidePhi","sinuMollweideY","sinuMollweideRaw","sinuMollweide","homolosineRaw","homolosine","interpolateLine","resampled","interrupted","lobe","interpolateSphere","bound","boggs_lobes","interrupted_boggs","homolosine_lobes","interrupted_homolosine","mollweide_lobes","interrupted_mollweide","mollweideHemispheres_lobes","mollweideHemispheres","sinuMollweide_lobes","interrupted_sinuMollweide","sinusoidal_lobes","interrupted_sinusoidal","kavrayskiy7Raw","kavrayskiy7","lagrangeRaw","lagrange","spacing","pi_sqrt2","larriveeRaw","sqrtcosPhi","sinPhi_2","sinLambda_6","cosLambda_6","f0","f1","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","larrivee","laskowskiRaw","lambdaPhi","laskowski","littrowRaw","y2_1","littrow","loximuthalRaw","loximuthal","millerRaw","modifiedStereographicRaw","zr","zi","ar","bi","deltar","deltai","sinc","gs48","gs50","modifiedStereographic_miller","lee","modifiedStereographicAlaska","modifiedStereographic","modifiedStereographicGs48","modifiedStereographicGs50","modifiedStereographicMiller","modifiedStereographicLee","coefficients","sqrt6","sqrt7","mtFlatPolarParabolicRaw","mtFlatPolarParabolic","mtFlatPolarQuarticRaw","sinTheta_2","mtFlatPolarQuartic","mtFlatPolarSinusoidalRaw","mtFlatPolarSinusoidal","naturalEarthRaw","phi4","naturalEarth","nellHammerRaw","nellHammer","pattersonK1","pattersonK2","pattersonK3","pattersonK4","pattersonC1","pattersonC2","pattersonC3","pattersonC4","pattersonRaw","yc","patterson","polyconicRaw","polyconic","matrix","subtract","matrix_angle","matrix_length","multiply","polyhedral","face","node","recurse","parent","edges","faceEdges","shared","found","sharedEdge","polyhedral_pointEqual","hasInverse","faceInvert","faceDegrees","proj","edge","multiPoint","notPoles","inside","some","octahedron","polyhedral_octahedron","butterfly","faceProjection","faces","collignonK","polyhedral_collignon","waterman","w5","xyz","waterman_cartesian","hexagon","cornerNormals","parents","normals","cosphi","dot","src_project","Error","projectFeature","projectFeatureCollection","projectGeometry","id","properties","projectGeometryCollection","sinkPoint","sinkLine","sinkPolygon","project_points","polygons","holes","clockwise","hole","yi","pj","xj","yj","quincuncial","projectQuincuncial","quincuncial_gringorten","peirce","quantize","digits","quantizePoint","toFixed","quantizePoints","quantizePolygon","quantizeGeometry","quantizeFeature","rectangularPolyconicRaw","E","cotPhi","rectangularPolyconic","robinson_K","robinsonRaw","i0","di","bx","by","yy","satelliteRaw","P","vertical","satelliteVerticalRaw","cosOmega","sinOmega","satellite","tilt","epsilonInverse","stitch_x0","x0e","stitch_x1","x1e","stitch_y0","y0e","stitch_y1","y1e","normalizePoint","clampPoint","clampPoints","extractFragments","fragments","pointk","xk","yk","fragmentBefore","stitchFeature","stitchGeometry","fragment","startFragment","endFragment","fragmentByStart","fragmentByEnd","index","stitchFragments","stitch","timesRaw","twoPoint","raw","twoPointAzimuthalRaw","cosd","twoPointAzimuthalUsa","twoPointAzimuthal","twoPointEquidistantRaw","lambdaa","lambdab","z02","tanLambda0","S","za","zb","cosza","coszb","twoPointEquidistantUsa","twoPointEquidistant","vanDerGrintenRaw","A2","G","P2","P2_A2","G_P2","Q","x2_y2","c3","m1","theta1","vanDerGrinten","vanDerGrinten2Raw","vanDerGrinten2","vanDerGrinten3Raw","vanDerGrinten3","vanDerGrinten4Raw","B2","C2","BC","B_C2","B_3C","D","D2","C_","B_C","F_","sqrtF","vanDerGrinten4","wagner4_A","wagner4_B","wagner4Raw","wagner4","wagner6Raw","wagner6","wagner7Raw","wagner7","wiechelRaw","sin1_Phi","wiechel","winkel3Raw","F","sinphi","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","dxdlambda","dxdphi","dydlambda","dydphi","dlambda","dphi","topology","src_bbox","bbox","bboxPoint","bboxGeometry","arcs","feature_feature","feature_object","transformPoint","stitchedArcs","emptyIndex","flush","dp","ends","fg","unshift","gf","mesh","meshArcs","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","mergeArcs","polygonsByArc","groups","extract","planarRingArea","group","neighbors","ki","bisect","lo","hi","mid","src_neighbors","indexesByArc","geometryType","indexes","ij","ik","splice","bb","untransform","map_data","lat","lng","country","chapter","red","MarkerPath","external_root_React_commonjs_react_commonjs2_react_amd_react_default","SvgContentElementWrapperWithDefs","forceGrayscale","rest","_objectWithoutPropertiesLoose","Fragment","values","patternUnits","opacity","React","propTypes","PropTypes","element","isRequired","bool","GWUMarker","render","_this$props","GWUMarker_objectWithoutPropertiesLoose","lib","href","PureComponent","shape","string","arrayOf","number","smallWorldDataPromise","worldDataPromise","markers","mapPoints","countryNameKeys","ChapterMapComponent","_PureComponent","worldData","componentDidMount","fetch","pathname","then","res","json","centerLat","centerLng","isGeographyIncluded","markerScale","_objectSpread","src_SvgContentElementWrapperWithDefs","geographies","matchingPoints","countryString","geographyMatchesCountryString","color","src_GWUMarker","func"],"mappings":"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","file":"chapter-map-component.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ChapterMapComponent\"] = factory(require(\"react\"), require(\"prop-types\"));\n\telse\n\t\troot[\"ChapterMapComponent\"] = factory(root[\"React\"], root[\"PropTypes\"]);\n})((typeof self !== \"undefined\" ? self : this), function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import {clipExtent} from \"../clip/extent\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export {default as geoArea} from \"./src/area\";\nexport {default as geoBounds} from \"./src/bounds\";\nexport {default as geoCentroid} from \"./src/centroid\";\nexport {default as geoCircle} from \"./src/circle\";\nexport {default as geoClipExtent} from \"./src/clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoContains} from \"./src/contains\";\nexport {default as geoDistance} from \"./src/distance\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./src/graticule\";\nexport {default as geoInterpolate} from \"./src/interpolate\";\nexport {default as geoLength} from \"./src/length\";\nexport {default as geoPath} from \"./src/path/index\";\nexport {default as geoAlbers} from \"./src/projection/albers\";\nexport {default as geoAlbersUsa} from \"./src/projection/albersUsa\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./src/projection/azimuthalEqualArea\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./src/projection/azimuthalEquidistant\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./src/projection/conicConformal\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./src/projection/conicEqualArea\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./src/projection/conicEquidistant\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./src/projection/equirectangular\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./src/projection/gnomonic\";\nexport {default as geoIdentity} from \"./src/projection/identity\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./src/projection/index\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./src/projection/mercator\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./src/projection/orthographic\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./src/projection/stereographic\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./src/projection/transverseMercator\";\nexport {default as geoRotation} from \"./src/rotation\";\nexport {default as geoStream} from \"./src/stream\";\nexport {default as geoTransform} from \"./src/transform\";\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ComposableMap = require(\"./ComposableMap\");\n\nObject.defineProperty(exports, \"ComposableMap\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ComposableMap).default;\n  }\n});\n\nvar _ZoomableGroup = require(\"./ZoomableGroup\");\n\nObject.defineProperty(exports, \"ZoomableGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGroup).default;\n  }\n});\n\nvar _ZoomableGlobe = require(\"./ZoomableGlobe\");\n\nObject.defineProperty(exports, \"ZoomableGlobe\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGlobe).default;\n  }\n});\n\nvar _Geographies = require(\"./Geographies\");\n\nObject.defineProperty(exports, \"Geographies\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geographies).default;\n  }\n});\n\nvar _Geography = require(\"./Geography\");\n\nObject.defineProperty(exports, \"Geography\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geography).default;\n  }\n});\n\nvar _Marker = require(\"./Marker\");\n\nObject.defineProperty(exports, \"Marker\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Marker).default;\n  }\n});\n\nvar _Markers = require(\"./Markers\");\n\nObject.defineProperty(exports, \"Markers\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Markers).default;\n  }\n});\n\nvar _Line = require(\"./Line\");\n\nObject.defineProperty(exports, \"Line\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Line).default;\n  }\n});\n\nvar _Lines = require(\"./Lines\");\n\nObject.defineProperty(exports, \"Lines\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Lines).default;\n  }\n});\n\nvar _MapGroup = require(\"./MapGroup\");\n\nObject.defineProperty(exports, \"MapGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MapGroup).default;\n  }\n});\n\nvar _Annotation = require(\"./Annotation\");\n\nObject.defineProperty(exports, \"Annotation\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotation).default;\n  }\n});\n\nvar _Annotations = require(\"./Annotations\");\n\nObject.defineProperty(exports, \"Annotations\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotations).default;\n  }\n});\n\nvar _Graticule = require(\"./Graticule\");\n\nObject.defineProperty(exports, \"Graticule\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Graticule).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateResizeFactor = calculateResizeFactor;\nexports.calculateMousePosition = calculateMousePosition;\nexports.isChildOfType = isChildOfType;\nexports.createNewChildren = createNewChildren;\nexports.roundPath = roundPath;\nexports.createConnectorPath = createConnectorPath;\nexports.createTextAnchor = createTextAnchor;\nexports.computeBackdrop = computeBackdrop;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction calculateResizeFactor(actualDimension, baseDimension) {\n  if (actualDimension === 0) return 1;\n  return 1 / 100 * (100 / actualDimension * baseDimension);\n}\n\nfunction calculateMousePosition(direction, projection, props, zoom, resizeFactor) {\n  var center = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : props.center;\n  var width = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : props.width;\n  var height = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : props.height;\n\n  var reference = { x: 0, y: 1 };\n  var canRotate = !!projection.rotate;\n  var reverseRotation = !!canRotate ? projection.rotate().map(function (item) {\n    return -item;\n  }) : false;\n  var point = !!reverseRotation ? projection.rotate(reverseRotation)([-center[0], -center[1]]) : projection([center[0], center[1]]);\n  var returner = point ? (point[reference[direction]] - (reference[direction] === 0 ? width : height) / 2) * zoom * (1 / resizeFactor) : 0;\n  if (canRotate) projection.rotate([-reverseRotation[0], -reverseRotation[1], -reverseRotation[2]]);\n  return !!reverseRotation ? returner : -returner;\n}\n\nfunction isChildOfType(child, expectedTypes) {\n  return expectedTypes.indexOf(child.props.componentIdentifier) !== -1;\n}\n\nfunction createNewChildren(children, props) {\n  if (!children) return;\n  if (!children.length) {\n    return isChildOfType(children, [\"Geographies\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection\n    }) : isChildOfType(children, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection,\n      zoom: props.zoom,\n      width: props.width,\n      height: props.height,\n      groupName: props.groupName,\n      itemName: props.itemName\n    }) : children;\n  } else {\n    return children.map(function (child, i) {\n      if (!child) return;\n      return isChildOfType(child, [\"Geographies\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection\n      }) : isChildOfType(child, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection,\n        zoom: props.zoom,\n        width: props.width,\n        height: props.height,\n        groupName: props.groupName,\n        itemName: props.itemName\n      }) : child;\n    });\n  }\n}\n\nfunction roundPath(path, precision) {\n  if (!path) return;\n  var query = /[\\d\\.-][\\d\\.e-]*/g;\n  return path.replace(query, function (n) {\n    return Math.round(n * (1 / precision)) / (1 / precision);\n  });\n}\n\nfunction createConnectorPath(connectorType, endPoint, curve) {\n  var e0 = endPoint[0];\n  var e1 = endPoint[1];\n  return \"M0,0 Q \" + (curve + 1) / 2 * e0 + \",\" + (e1 - (curve + 1) / 2 * e1) + \" \" + e0 + \",\" + e1;\n}\n\nfunction createTextAnchor(dx) {\n  if (dx > 0) return \"start\";else if (dx < 0) return \"end\";else return \"middle\";\n}\n\nfunction computeBackdrop(projection, backdrop) {\n  var canRotate = projection.rotate;\n  var originalRotation = canRotate ? projection.rotate() : null;\n\n  var tl = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[0], backdrop.y[0]]) : projection([backdrop.x[0], backdrop.y[0]]);\n\n  var br = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[1], backdrop.y[1]]) : projection([backdrop.x[1], backdrop.y[1]]);\n\n  var x = tl ? tl[0] : 0;\n  var x0 = br ? br[0] : 0;\n\n  var y = tl ? tl[1] : 0;\n  var y0 = br ? br[1] : 0;\n\n  var width = x0 - x;\n  var height = y0 - y;\n\n  if (originalRotation) projection.rotate(originalRotation);\n\n  return { x: x, y: y, width: width, height: height };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MapGroup = function (_Component) {\n  _inherits(MapGroup, _Component);\n\n  function MapGroup() {\n    _classCallCheck(this, MapGroup);\n\n    return _possibleConstructorReturn(this, (MapGroup.__proto__ || Object.getPrototypeOf(MapGroup)).apply(this, arguments));\n  }\n\n  _createClass(MapGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          projection = _props.projection,\n          style = _props.style,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          groupName = _props.groupName,\n          itemName = _props.itemName;\n\n      return _react2.default.createElement(\n        \"g\",\n        { className: \"rsm-\" + groupName, style: style },\n        !children ? null : children.length === undefined ? _react2.default.cloneElement(children, {\n          projection: projection,\n          zoom: zoom,\n          width: width,\n          height: height\n        }) : children.map(function (child, i) {\n          return !child ? null : _react2.default.cloneElement(child, {\n            key: child.key || itemName + \"-\" + i,\n            projection: projection,\n            zoom: zoom,\n            width: width,\n            height: height\n          });\n        })\n      );\n    }\n  }]);\n\n  return MapGroup;\n}(_react.Component);\n\nMapGroup.defaultProps = {\n  componentIdentifier: \"Group\",\n  groupName: \"group\",\n  itemName: \"group-item\"\n};\n\nexports.default = MapGroup;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  scale: 160,\n  xOffset: 0,\n  yOffset: 0,\n  rotation: [0, 0, 0],\n  precision: 0.1\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _projections = require(\"./projections\");\n\nvar _projections2 = _interopRequireDefault(_projections);\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ComposableMap = function (_Component) {\n  _inherits(ComposableMap, _Component);\n\n  function ComposableMap() {\n    _classCallCheck(this, ComposableMap);\n\n    var _this = _possibleConstructorReturn(this, (ComposableMap.__proto__ || Object.getPrototypeOf(ComposableMap)).call(this));\n\n    _this.projection = _this.projection.bind(_this);\n    return _this;\n  }\n\n  _createClass(ComposableMap, [{\n    key: \"projection\",\n    value: function projection() {\n      var _props = this.props,\n          projection = _props.projection,\n          projectionConfig = _props.projectionConfig,\n          width = _props.width,\n          height = _props.height;\n\n\n      return typeof projection !== \"function\" ? (0, _projections2.default)(width, height, projectionConfig, projection) : projection(width, height, projectionConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          style = _props2.style,\n          className = _props2.className,\n          showCenter = _props2.showCenter,\n          children = _props2.children,\n          aspectRatio = _props2.aspectRatio,\n          viewBox = _props2.viewBox,\n          defs = _props2.defs;\n\n\n      return _react2.default.createElement(\n        \"svg\",\n        { width: width,\n          height: height,\n          viewBox: viewBox ? viewBox : \"0 0 \" + width + \" \" + height,\n          className: \"rsm-svg \" + (className || ''),\n          style: style,\n          preserveAspectRatio: aspectRatio },\n        defs && _react2.default.createElement(\n          \"defs\",\n          null,\n          defs\n        ),\n        _react2.default.cloneElement(this.props.children, {\n          projection: this.projection(),\n          width: width,\n          height: height\n        }),\n        showCenter && _react2.default.createElement(\n          \"g\",\n          null,\n          _react2.default.createElement(\"rect\", { x: width / 2 - 0.5, y: 0, width: 1, height: height, fill: \"#e91e63\" }),\n          _react2.default.createElement(\"rect\", { x: 0, y: height / 2 - 0.5, width: width, height: 1, fill: \"#e91e63\" })\n        )\n      );\n    }\n  }]);\n\n  return ComposableMap;\n}(_react.Component);\n\nComposableMap.defaultProps = {\n  width: 800,\n  height: 450,\n  projection: \"times\",\n  projectionConfig: _projectionConfig2.default,\n  aspectRatio: \"xMidYMid\",\n  viewBox: null\n};\n\nexports.default = ComposableMap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (width, height, config, projectionName) {\n\n  var scale = config.scale || _projectionConfig2.default.scale;\n  var xOffset = config.xOffset || _projectionConfig2.default.xOffset;\n  var yOffset = config.yOffset || _projectionConfig2.default.yOffset;\n  var rotation = config.rotation || _projectionConfig2.default.rotation;\n  var precision = config.precision || _projectionConfig2.default.precision;\n\n  var baseProjection = projectionReference[projectionName]().scale(scale).translate([xOffset + width / 2, yOffset + height / 2]).precision(precision);\n\n  return projectionName === \"albersUsa\" ? baseProjection : projectionName === \"orthographic\" ? baseProjection.rotate(rotation).clipAngle(90) : baseProjection.rotate(rotation);\n};\n\nvar _d3GeoProjection = require(\"d3-geo-projection\");\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar projectionReference = {\n  mercator: _d3Geo.geoMercator,\n  miller: _d3GeoProjection.geoMiller,\n  times: _d3GeoProjection.geoTimes,\n  robinson: _d3GeoProjection.geoRobinson,\n  winkel3: _d3GeoProjection.geoWinkel3,\n  eckert4: _d3GeoProjection.geoEckert4,\n  albersUsa: _d3Geo.geoAlbersUsa,\n  orthographic: _d3Geo.geoOrthographic\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ZoomableGroup = function (_Component) {\n  _inherits(ZoomableGroup, _Component);\n\n  function ZoomableGroup(props) {\n    _classCallCheck(this, ZoomableGroup);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGroup.__proto__ || Object.getPrototypeOf(ZoomableGroup)).call(this, props));\n\n    var backdrop = (0, _utils.computeBackdrop)(props.projection, props.backdrop);\n\n    _this.state = {\n      mouseX: (0, _utils.calculateMousePosition)(\"x\", props.projection, props, props.zoom, 1),\n      mouseY: (0, _utils.calculateMousePosition)(\"y\", props.projection, props, props.zoom, 1),\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      resizeFactorX: 1,\n      resizeFactorY: 1,\n      backdrop: {\n        width: Math.round(backdrop.width),\n        height: Math.round(backdrop.height),\n        x: Math.round(backdrop.x),\n        y: Math.round(backdrop.y)\n      }\n    };\n\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n\n    return _this;\n  }\n\n  _createClass(ZoomableGroup, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        mouseX: pageX - this.state.mouseXStart,\n        mouseY: pageY - this.state.mouseYStart\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY,\n          resizeFactorX = _state.resizeFactorX,\n          resizeFactorY = _state.resizeFactorY;\n      var _props = this.props,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          projection = _props.projection,\n          onMoveEnd = _props.onMoveEnd;\n\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var newCenter = projection.invert([x, y]);\n      onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY;\n\n      if (this.props.disablePanning) return;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY,\n          resizeFactorX = _state2.resizeFactorX,\n          resizeFactorY = _state2.resizeFactorY;\n      var _props2 = this.props,\n          zoom = _props2.zoom,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          onMoveStart = _props2.onMoveStart;\n\n      this.setState({\n        isPressed: true,\n        mouseXStart: pageX - mouseX,\n        mouseYStart: pageY - mouseY\n      });\n      if (!onMoveStart) return;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var currentCenter = projection.invert([x, y]);\n      onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state3 = this.state,\n          mouseX = _state3.mouseX,\n          mouseY = _state3.mouseY,\n          resizeFactorX = _state3.resizeFactorX,\n          resizeFactorY = _state3.resizeFactorY;\n      var _props3 = this.props,\n          projection = _props3.projection,\n          center = _props3.center,\n          zoom = _props3.zoom;\n\n\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n\n      this.setState({\n        zoom: nextProps.zoom,\n        mouseX: centerChanged ? (0, _utils.calculateMousePosition)(\"x\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorX) : mouseX * zoomFactor,\n        mouseY: centerChanged ? (0, _utils.calculateMousePosition)(\"y\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorY) : mouseY * zoomFactor\n      });\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize() {\n      var _props4 = this.props,\n          width = _props4.width,\n          height = _props4.height,\n          projection = _props4.projection,\n          zoom = _props4.zoom;\n\n\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n\n      var xPercentageChange = 1 / resizeFactorX * this.state.resizeFactorX;\n      var yPercentageChange = 1 / resizeFactorY * this.state.resizeFactorY;\n\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: this.state.mouseX * xPercentageChange,\n        mouseY: this.state.mouseY * yPercentageChange\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props5 = this.props,\n          width = _props5.width,\n          height = _props5.height,\n          projection = _props5.projection,\n          zoom = _props5.zoom;\n\n\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: (0, _utils.calculateMousePosition)(\"x\", projection, this.props, zoom, resizeFactorX),\n        mouseY: (0, _utils.calculateMousePosition)(\"y\", projection, this.props, zoom, resizeFactorY)\n      });\n\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props6 = this.props,\n          width = _props6.width,\n          height = _props6.height,\n          zoom = _props6.zoom,\n          style = _props6.style,\n          projection = _props6.projection,\n          children = _props6.children;\n      var _state4 = this.state,\n          mouseX = _state4.mouseX,\n          mouseY = _state4.mouseY,\n          resizeFactorX = _state4.resizeFactorX,\n          resizeFactorY = _state4.resizeFactorY;\n\n\n      return _react2.default.createElement(\n        \"g\",\n        { className: \"rsm-zoomable-group\",\n          ref: function ref(zoomableGroupNode) {\n            return _this2.zoomableGroupNode = zoomableGroupNode;\n          },\n          transform: \"\\n           translate(\\n             \" + Math.round((width / 2 + resizeFactorX * mouseX) * 100) / 100 + \"\\n             \" + Math.round((height / 2 + resizeFactorY * mouseY) * 100) / 100 + \"\\n           )\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n          onMouseMove: this.handleMouseMove,\n          onMouseUp: this.handleMouseUp,\n          onMouseDown: this.handleMouseDown,\n          onTouchStart: this.handleTouchStart,\n          onTouchMove: this.handleTouchMove,\n          onTouchEnd: this.handleMouseUp,\n          style: style\n        },\n        _react2.default.createElement(\"rect\", {\n          x: this.state.backdrop.x,\n          y: this.state.backdrop.y,\n          width: this.state.backdrop.width,\n          height: this.state.backdrop.height,\n          fill: \"transparent\",\n          style: { strokeWidth: 0 }\n        }),\n        (0, _utils.createNewChildren)(children, this.props)\n      );\n    }\n  }]);\n\n  return ZoomableGroup;\n}(_react.Component);\n\nZoomableGroup.defaultProps = {\n  center: [0, 0],\n  backdrop: {\n    x: [-179.9, 179.9],\n    y: [89.9, -89.9]\n  },\n  zoom: 1,\n  disablePanning: false\n};\n\nexports.default = ZoomableGroup;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ZoomableGlobe = function (_Component) {\n  _inherits(ZoomableGlobe, _Component);\n\n  function ZoomableGlobe(props) {\n    _classCallCheck(this, ZoomableGlobe);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGlobe.__proto__ || Object.getPrototypeOf(ZoomableGlobe)).call(this, props));\n\n    var initialRotation = props.projection.rotate();\n\n    _this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      rotation: [initialRotation[0] - props.center[0], initialRotation[1] - props.center[1], initialRotation[2]]\n    };\n\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGlobe, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n\n      var differenceX = clientX - this.state.mouseXStart;\n      var differenceY = clientY - this.state.mouseYStart;\n\n      this.setState({\n        mouseX: clientX,\n        mouseY: clientY,\n        mouseXStart: clientX,\n        mouseYStart: clientY,\n        rotation: [this.state.rotation[0] + differenceX * this.props.sensitivity, this.state.rotation[1] - differenceY * this.props.sensitivity, this.state.rotation[2]]\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var newCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY,\n          clientX = _ref3.clientX,\n          clientY = _ref3.clientY;\n\n      if (this.props.disablePanning) return;\n      this.setState({\n        isPressed: true,\n        mouseXStart: clientX,\n        mouseYStart: clientY\n      });\n      if (!this.props.onMoveStart) return;\n      var currentCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY;\n      var _props = this.props,\n          projection = _props.projection,\n          center = _props.center,\n          zoom = _props.zoom;\n\n\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n\n      this.setState({\n        zoom: nextProps.zoom,\n        rotation: centerChanged ? [-nextProps.center[0], -nextProps.center[1], this.state.rotation[2]] : this.state.rotation\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          zoom = _props2.zoom;\n\n\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          width = _props3.width,\n          height = _props3.height,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          projection = _props3.projection,\n          children = _props3.children;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY;\n\n\n      return _react2.default.createElement(\n        \"g\",\n        { className: \"rsm-zoomable-globe\",\n          ref: function ref(zoomableGlobeNode) {\n            return _this2.zoomableGlobeNode = zoomableGlobeNode;\n          },\n          transform: \"\\n           translate(\" + width / 2 + \" \" + height / 2 + \")\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n          onMouseMove: this.handleMouseMove,\n          onMouseUp: this.handleMouseUp,\n          onMouseDown: this.handleMouseDown,\n          onTouchStart: this.handleTouchStart,\n          onTouchMove: this.handleTouchMove,\n          onTouchEnd: this.handleMouseUp,\n          style: style\n        },\n        (0, _utils.createNewChildren)(children, {\n          width: width,\n          height: height,\n          center: this.center,\n          backdrop: this.backdrop,\n          zoom: this.props.zoom,\n          disablePanning: this.props.disablePanning,\n          children: children,\n          projection: projection.rotate(this.state.rotation)\n        })\n      );\n    }\n  }]);\n\n  return ZoomableGlobe;\n}(_react.Component);\n\nZoomableGlobe.defaultProps = {\n  center: [0, 0],\n  zoom: 1,\n  disablePanning: false,\n  sensitivity: 0.25\n};\n\nexports.default = ZoomableGlobe;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _topojsonClient = require(\"topojson-client\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Geographies = function (_Component) {\n  _inherits(Geographies, _Component);\n\n  function Geographies(props) {\n    _classCallCheck(this, Geographies);\n\n    var _this = _possibleConstructorReturn(this, (Geographies.__proto__ || Object.getPrototypeOf(Geographies)).call(this, props));\n\n    _this.state = {\n      geographyPaths: _this.shouldFetchGeographies(props.geography) ? [] : _this.parseGeographies(props.geography)\n    };\n    return _this;\n  }\n\n  _createClass(Geographies, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.geography !== this.props.geography) {\n        if (this.shouldFetchGeographies(nextProps.geography)) {\n          this.fetchGeographies(nextProps.geography);\n        } else {\n          this.setState({\n            geographyPaths: this.parseGeographies(nextProps.geography)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var geoPathsChanged = nextState.geographyPaths.length !== this.state.geographyPaths.length;\n      return geoPathsChanged || nextProps.disableOptimization;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.geographyUrl || this.props.geographyPaths) {\n        console.warn(\"You are using the deprecated geographyUrl or geographyPaths props. Use the new geography prop instead. Check out the new docs here: https://github.com/zcreativelabs/react-simple-maps#Geographies-component\");\n      }\n      if (this.shouldFetchGeographies(this.props.geography)) {\n        this.fetchGeographies(this.props.geography);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelPendingRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          style = _props.style,\n          children = _props.children;\n\n      return _react2.default.createElement(\n        \"g\",\n        { className: \"rsm-geographies\", style: style },\n        children(this.state.geographyPaths || [], projection)\n      );\n    }\n  }, {\n    key: \"shouldFetchGeographies\",\n    value: function shouldFetchGeographies(geography) {\n      return typeof geography === 'string';\n    }\n  }, {\n    key: \"parseGeographies\",\n    value: function parseGeographies(geography) {\n      if (Array.isArray(geography)) {\n        return geography;\n      }\n\n      if (Object.prototype.toString.call(geography) === '[object Object]') {\n        return (0, _topojsonClient.feature)(geography, geography.objects[Object.keys(geography.objects)[0]]).features;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"fetchGeographies\",\n    value: function fetchGeographies(geography) {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open(\"GET\", geography, true);\n      request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n          var geographyPaths = JSON.parse(request.responseText);\n          _this2.setState({\n            geographyPaths: _this2.parseGeographies(geographyPaths)\n          }, function () {\n            if (_this2.props.onGeographyPathsLoaded) {\n              _this2.props.onGeographyPathsLoaded(String(request.status));\n            }\n          });\n        } else {\n          if (_this2.props.onGeographyPathsLoaded) {\n            _this2.props.onGeographyPathsLoaded(String(request.status));\n          }\n        }\n      };\n      request.onerror = function () {\n        console.log(\"There was a connection error...\");\n      };\n      request.send();\n\n      this.cancelPendingRequest();\n      this._xhr = request;\n    }\n  }, {\n    key: \"cancelPendingRequest\",\n    value: function cancelPendingRequest() {\n      if (this._xhr) {\n        this._xhr.abort();\n        this._xhr = null;\n      }\n    }\n  }]);\n\n  return Geographies;\n}(_react.Component);\n\nGeographies.defaultProps = {\n  componentIdentifier: \"Geographies\",\n  disableOptimization: false,\n  geography: \"\"\n};\n\nexports.default = Geographies;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar pathCache = {};\n\nvar renderPath = function renderPath(cacheId, geography, projection, round, precision) {\n  if (pathCache[cacheId]) return pathCache[cacheId];\n\n  var pathString = cacheId ? pathCache[cacheId] ? pathCache[cacheId] : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography) : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography);\n\n  if (cacheId) pathCache[cacheId] = pathString;\n\n  return pathString;\n};\n\nvar Geography = function (_Component) {\n  _inherits(Geography, _Component);\n\n  function Geography() {\n    _classCallCheck(this, Geography);\n\n    var _this = _possibleConstructorReturn(this, (Geography.__proto__ || Object.getPrototypeOf(Geography)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Geography, [{\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      evt.persist();\n      var _props = this.props,\n          onClick = _props.onClick,\n          geography = _props.geography;\n\n      return onClick && onClick(geography, evt);\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props2 = this.props,\n          onMouseEnter = _props2.onMouseEnter,\n          geography = _props2.geography;\n\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props3 = this.props,\n          onMouseMove = _props3.onMouseMove,\n          geography = _props3.geography;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(geography, evt);\n        });\n      } else if (onMouseMove) onMouseMove(geography, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseLeave = _props4.onMouseLeave,\n          geography = _props4.geography;\n\n      this.setState({\n        hover: false,\n        pressed: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseDown = _props5.onMouseDown,\n          geography = _props5.geography;\n\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props6 = this.props,\n          onMouseUp = _props6.onMouseUp,\n          geography = _props6.geography;\n\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          geography = _props7.geography;\n\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          geography = _props8.geography;\n\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(geography, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props9 = this.props,\n          geography = _props9.geography,\n          projection = _props9.projection,\n          round = _props9.round,\n          cacheId = _props9.cacheId,\n          precision = _props9.precision,\n          tabable = _props9.tabable,\n          style = _props9.style;\n      var _state = this.state,\n          hover = _state.hover,\n          pressed = _state.pressed;\n\n\n      var pathString = renderPath(cacheId, geography, projection, round, precision);\n\n      var excludeProps = [\"geography\", \"projection\", \"round\", \"cacheId\", \"precision\", \"tabable\", \"style\", \"onClick\", \"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onMouseDown\", \"onMouseUp\", \"onFocus\", \"onBlur\"];\n\n      var restProps = Object.keys(this.props).filter(function (key) {\n        return excludeProps.indexOf(key) === -1;\n      }).reduce(function (obj, key) {\n        obj[key] = _this2.props[key];\n        return obj;\n      }, {});\n\n      return _react2.default.createElement(\"path\", _extends({\n        d: pathString,\n        className: \"rsm-geography\" + (pressed ? \" rsm-geography--pressed\" : \"\") + (hover ? \" rsm-geography--hover\" : \"\"),\n        style: style[pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onClick: this.handleMouseClick,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseMove: this.handleMouseMove,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, restProps));\n    }\n  }]);\n\n  return Geography;\n}(_react.Component);\n\nGeography.defaultProps = {\n  precision: 0.1,\n  cacheId: null,\n  round: false,\n  tabable: true,\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  }\n};\n\nexports.default = Geography;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Marker = function (_Component) {\n  _inherits(Marker, _Component);\n\n  function Marker() {\n    _classCallCheck(this, Marker);\n\n    var _this = _possibleConstructorReturn(this, (Marker.__proto__ || Object.getPrototypeOf(Marker)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Marker, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          marker = _props.marker;\n\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          marker = _props2.marker;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(marker, evt);\n        });\n      } else if (onMouseMove) onMouseMove(marker, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          marker = _props3.marker;\n\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          marker = _props4.marker;\n\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          marker = _props5.marker;\n\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          marker = _props6.marker,\n          projection = _props6.projection;\n\n      return onClick && onClick(marker, projection(marker.coordinates), evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          marker = _props7.marker;\n\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          marker = _props8.marker;\n\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(marker, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          projection = _props9.projection,\n          marker = _props9.marker,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          children = _props9.children,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n\n\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n      var translation = projection(marker.coordinates);\n\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), marker.coordinates]\n        }\n      };\n\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n\n      return _react2.default.createElement(\n        \"g\",\n        { className: \"rsm-marker\" + (pressed ? \" rsm-marker--pressed\" : \"\") + (hover ? \" rsm-marker--hover\" : \"\"),\n          transform: \"translate(\\n           \" + translation[0] + \"\\n           \" + translation[1] + \"\\n         ) \" + scale,\n          style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave,\n          onMouseDown: this.handleMouseDown,\n          onMouseUp: this.handleMouseUp,\n          onClick: this.handleMouseClick,\n          onMouseMove: this.handleMouseMove,\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur,\n          tabIndex: tabable ? 0 : -1\n        },\n        children\n      );\n    }\n  }]);\n\n  return Marker;\n}(_react.Component);\n\nMarker.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  marker: {\n    coordinates: [0, 0]\n  },\n  tabable: true,\n  preserveMarkerAspect: true\n};\n\nexports.default = Marker;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Markers = function Markers(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nMarkers.defaultProps = {\n  componentIdentifier: \"Markers\",\n  groupName: \"markers\",\n  itemName: \"marker\"\n};\n\nexports.default = Markers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Line = function (_Component) {\n  _inherits(Line, _Component);\n\n  function Line(props) {\n    _classCallCheck(this, Line);\n\n    var _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Line, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          line = _props.line;\n\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          line = _props2.line;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(line, evt);\n        });\n      } else if (onMouseMove) onMouseMove(line, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          line = _props3.line;\n\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          line = _props4.line;\n\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          line = _props5.line;\n\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          line = _props6.line,\n          projection = _props6.projection;\n\n      return onClick && onClick(line, [projection(line.coordinates.start), projection(line.coordinates.end)], evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          line = _props7.line;\n\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(line, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          line = _props8.line;\n\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(line, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          className = _props9.className,\n          projection = _props9.projection,\n          line = _props9.line,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height,\n          buildPath = _props9.buildPath,\n          strokeWidth = _props9.strokeWidth;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n\n\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n\n      var buildLineString = function buildLineString(coordinates) {\n        return {\n          type: \"Feature\",\n          geometry: {\n            type: \"LineString\",\n            coordinates: [projection.invert([width / 2, height / 2]), coordinates]\n          }\n        };\n      };\n      var startLineString = buildLineString(line.coordinates.start);\n      var endLineString = buildLineString(line.coordinates.end);\n\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && ((0, _d3Geo.geoLength)(startLineString) > radians || (0, _d3Geo.geoLength)(endLineString) > radians);\n\n      var start = projection(line.coordinates.start);\n      var end = projection(line.coordinates.end);\n\n      var path = buildPath ? buildPath(start, end, line) : \"M \" + start.join(\" \") + \" L \" + end.join(\" \");\n\n      return _react2.default.createElement(\"path\", {\n        className: \"rsm-line\" + (pressed ? \" rsm-line--pressed\" : \"\") + (hover ? \" rsm-line--hover\" : \"\") + \" \" + className,\n        transform: \"\" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1,\n        d: path,\n        strokeWidth: strokeWidth\n      });\n    }\n  }]);\n\n  return Line;\n}(_react.Component);\n\nLine.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  line: {\n    coordinates: {\n      start: [0, 0],\n      end: [-99.1, 19.4]\n    }\n  },\n  tabable: true,\n  preserveMarkerAspect: true,\n  strokeWidth: 1,\n  className: \"\"\n};\n\nexports.default = Line;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Lines = function Lines(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nLines.defaultProps = {\n  componentIdentifier: \"Lines\",\n  groupName: \"lines\",\n  itemName: \"line\"\n};\n\nexports.default = Lines;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Annotation = function (_Component) {\n  _inherits(Annotation, _Component);\n\n  function Annotation() {\n    _classCallCheck(this, Annotation);\n\n    return _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).apply(this, arguments));\n  }\n\n  _createClass(Annotation, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          subject = _props.subject,\n          style = _props.style,\n          hiddenStyle = _props.hiddenStyle,\n          dx = _props.dx,\n          dy = _props.dy,\n          zoom = _props.zoom,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          children = _props.children,\n          curve = _props.curve,\n          markerEnd = _props.markerEnd,\n          width = _props.width,\n          height = _props.height;\n\n\n      var connectorPath = (0, _utils.createConnectorPath)(null, [-dx / zoom, -dy / zoom], curve);\n      var translation = projection(subject);\n\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), subject]\n        }\n      };\n\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n\n      return _react2.default.createElement(\n        \"g\",\n        {\n          className: \"rsm-annotation\",\n          style: isHidden ? _extends({}, style, hiddenStyle) : style,\n          transform: \"translate(\\n          \" + (translation[0] + dx / zoom) + \"\\n          \" + (translation[1] + dy / zoom) + \"\\n        )\",\n          textAnchor: (0, _utils.createTextAnchor)(dx)\n        },\n        children,\n        _react2.default.createElement(\"path\", {\n          d: connectorPath,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n          fill: \"none\",\n          markerEnd: markerEnd\n        })\n      );\n    }\n  }]);\n\n  return Annotation;\n}(_react.Component);\n\nAnnotation.defaultProps = {\n  curve: 0,\n  markerEnd: \"none\",\n  componentIdentifier: \"Annotation\",\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  zoom: 1\n};\n\nexports.default = Annotation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Annotations = function Annotations(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nAnnotations.defaultProps = {\n  componentIdentifier: \"Annotations\",\n  groupName: \"annotations\",\n  itemName: \"annotation\"\n};\n\nexports.default = Annotations;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar computeGraticule = function computeGraticule(projection, step) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().step(step)());\n};\n\nvar computeOutline = function computeOutline(projection) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().outline());\n};\n\nvar Graticule = function (_Component) {\n  _inherits(Graticule, _Component);\n\n  function Graticule() {\n    _classCallCheck(this, Graticule);\n\n    var _this = _possibleConstructorReturn(this, (Graticule.__proto__ || Object.getPrototypeOf(Graticule)).call(this));\n\n    _this.state = {\n      renderGraticule: false,\n      graticulePath: \"\",\n      outlinePath: \"\"\n    };\n    _this.renderGraticule = _this.renderGraticule.bind(_this);\n    return _this;\n  }\n\n  _createClass(Graticule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderGraticule();\n    }\n  }, {\n    key: \"renderGraticule\",\n    value: function renderGraticule() {\n      var _props = this.props,\n          step = _props.step,\n          projection = _props.projection,\n          round = _props.round,\n          precision = _props.precision;\n\n\n      this.setState({\n        renderGraticule: true,\n        graticulePath: round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n        outlinePath: round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _props2 = this.props,\n          step = _props2.step,\n          projection = _props2.projection,\n          round = _props2.round,\n          precision = _props2.precision,\n          globe = _props2.globe;\n\n\n      if (nextProps.round !== round || nextProps.precision !== precision || globe) {\n        this.setState({\n          graticulePath: nextProps.round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n          outlinePath: nextProps.round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.disableOptimization;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props3 = this.props,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          outline = _props3.outline,\n          fill = _props3.fill,\n          stroke = _props3.stroke;\n\n\n      return this.state.renderGraticule && _react2.default.createElement(\n        \"g\",\n        { className: \"rsm-graticule\" },\n        _react2.default.createElement(\"path\", {\n          fill: fill,\n          stroke: stroke,\n          d: this.state.graticulePath,\n          style: style\n        }),\n        outline && _react2.default.createElement(\"path\", {\n          fill: fill,\n          stroke: stroke,\n          d: this.state.outlinePath,\n          style: style\n        })\n      );\n    }\n  }]);\n\n  return Graticule;\n}(_react.Component);\n\nGraticule.defaultProps = {\n  componentIdentifier: \"Graticule\",\n  disableOptimization: true,\n  globe: false,\n  round: true,\n  precision: 0.1,\n  step: [10, 10],\n  outline: true,\n  stroke: \"#DDDDDD\",\n  fill: \"transparent\",\n  style: {\n    pointerEvents: \"none\"\n  }\n};\n\nexports.default = Graticule;","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan} from \"./math\";\n\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50, delta;\n    if (!r) return [0, 0];\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = tan(z_2),\n          lnsecz_2 = log(1 / cosz_2);\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2));\n    } while (abs(delta) > epsilon && --i > 0);\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function(_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p\n      .scale(179.976)\n      .clipAngle(147);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, pi, sin, sinci, sqrt} from \"./math\";\n\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y), sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n}\n\n// Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\naitoffRaw.invert = function(x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x, y1 = y, i = 25;\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n  return [x1, y1];\n};\n\nexport default function() {\n  return projection(aitoffRaw)\n      .scale(152.63);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, atan2, cos, degrees, epsilon, radians, sin, tan} from \"./math\";\n\nexport function armadilloRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      k = (1 + sinPhi0 - cosPhi0) / 2;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        cosLambda = cos(lambda /= 2);\n    return [\n      (1 + cosPhi) * sin(lambda),\n      (sPhi0 * phi > -atan2(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + sin(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda = 0,\n        phi = 0,\n        i = 50;\n    do {\n      var cosLambda = cos(lambda),\n          sinLambda = sin(lambda),\n          cosPhi = cos(phi),\n          sinPhi = sin(phi),\n          A = 1 + cosPhi,\n          fx = A * sinLambda - x,\n          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,\n          dxdLambda = A * cosLambda / 2,\n          dxdPhi = -sinLambda * sinPhi,\n          dydLambda = sinPhi0 * A * sinLambda / 2,\n          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,\n          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,\n          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,\n          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;\n      lambda -= dLambda, phi -= dPhi;\n    } while ((abs(dLambda) > epsilon || abs(dPhi) > epsilon) && --i > 0);\n    return sPhi0 * phi > -atan2(cos(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var phi0 = 20 * radians,\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      m = projectionMutator(armadilloRaw),\n      p = m(phi0),\n      stream_ = p.stream;\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    tanPhi0 = tan((sPhi0 = (phi0 = _ * radians) >= 0 ? 1 : -1) * phi0);\n    return m(phi0);\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90) sphereStream.point(lambda, sPhi0 * 90);\n      while (sPhi0 * (lambda -= phi0) >= -180) { // TODO precision?\n        sphereStream.point(lambda, sPhi0 * -atan2(cos(lambda * radians / 2), tanPhi0) * degrees);\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .scale(218.695)\n      .center([0, 28.0974]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan} from \"./math\";\n\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [\n    4 / 3 * x * (3 + x2 - 3 * y2),\n    4 / 3 * y * (3 + 3 * x2 - y2)\n  ];\n}\n\naugustRaw.invert = function(x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [\n    sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d),\n    sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)\n  ];\n};\n\nexport default function() {\n  return projection(augustRaw)\n      .scale(66.1603);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan} from \"./math\";\n\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\n\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi\n      ? [lambda, log(tan(quarterPi + phi / 2))]\n      : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function(x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi, i = 25, delta, y0;\n  do {\n    var cosPhi_2 = cos(phi / 2), tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function() {\n  return projection(bakerRaw)\n      .scale(112.314);\n}\n","import {geoProjectionMutator as projectionMutator, geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {abs, acos, asin, atan, atan2, cos, degrees, halfPi, pi, radians, round, sin, sqrt, tan} from \"./math\";\n\nexport function berghausRaw(lobes) {\n  var k = 2 * pi / lobes;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi);\n    if (abs(lambda) > halfPi) { // back hemisphere\n      var theta = atan2(p[1], p[0]),\n          r = sqrt(p[0] * p[0] + p[1] * p[1]),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          α = atan2(sin(theta -= theta0), 2 - cos(theta)); // angle relative to lobe end\n      theta = theta0 + asin(pi / r * sin(α)) - α;\n      p[0] = r * cos(theta);\n      p[1] = r * sin(theta);\n    }\n    return p;\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y);\n    if (r > halfPi) {\n      var theta = atan2(y, x),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          s = theta > theta0 ? -1 : 1,\n          A = r * cos(theta0 - theta),\n          cotα = 1 / tan(s * acos((A - pi) / sqrt(pi * (pi - 2 * A) + r * r)));\n      theta = theta0 + 2 * atan((cotα + s * sqrt(cotα * cotα - 3)) / 3);\n      x = r * cos(theta), y = r * sin(theta);\n    }\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var lobes = 5,\n      m = projectionMutator(berghausRaw),\n      p = m(lobes),\n      projectionStream = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.lobes = function(_) {\n    return arguments.length ? m(lobes = +_) : lobes;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = projectionStream(stream),\n        sphereStream = (p.rotate([0, 0]), projectionStream(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var i = 0, delta = 360 / lobes, delta0 = 2 * pi / lobes, phi = 90 - 180 / lobes, phi0 = halfPi; i < lobes; ++i, phi -= delta, phi0 -= delta0) {\n        sphereStream.point(atan2(sr * cos(phi0), cr) * degrees, asin(sr * sin(phi0)) * degrees);\n        if (phi < -90) {\n          sphereStream.point(-90, -180 - phi - epsilon);\n          sphereStream.point(-90, -180 - phi + epsilon);\n        } else {\n          sphereStream.point(90, phi + epsilon);\n          sphereStream.point(90, phi - epsilon);\n        }\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .scale(87.8076)\n      .center([0, 17.1875])\n      .clipAngle(180 - 1e-3);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideBromleyTheta} from \"./mollweide\";\nimport {abs, cos, epsilon, pi, quarterPi, sin, sqrt2} from \"./math\";\n\nvar k = 2.00276,\n    w = 1.11072;\n\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function(x, y) {\n  var ky = k * y, theta = y < 0 ? -quarterPi : quarterPi, i = 25, delta, phi;\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function() {\n  return projection(boggsRaw)\n      .scale(160.857);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {degrees, radians} from \"./math\";\n\nexport default function(projectAt) {\n  var phi0 = 0,\n      m = projectionMutator(projectAt),\n      p = m(phi0);\n\n  p.parallel = function(_) {\n    return arguments.length ? m(phi0 = _ * radians) : phi0 * degrees;\n  };\n\n  return p;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {cos} from \"./math\";\n\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function(x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function() {\n  return projection(sinusoidalRaw)\n      .scale(152.63);\n}\n","import parallel1 from \"./parallel1\";\nimport {atan2, cos, sin, sqrt, tan} from \"./math\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\n\nexport function bonneRaw(phi0) {\n  if (!phi0) return sinusoidalRaw;\n  var cotPhi0 = 1 / tan(phi0);\n\n  function forward(lambda, phi) {\n    var rho = cotPhi0 + phi0 - phi,\n        e = rho ? lambda * cos(phi) / rho : rho;\n    return [rho * sin(e), cotPhi0 - rho * cos(e)];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + (y = cotPhi0 - y) * y),\n        phi = cotPhi0 + phi0 - rho;\n    return [rho / cos(phi) * atan2(x, y), phi];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(bonneRaw)\n      .scale(123.082)\n      .center([0, 26.1441])\n      .parallel(45);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {atan2, cos, halfPi, sin, sqrt} from \"./math\";\n\nexport function bottomleyRaw(sinPsi) {\n\n  function forward(lambda, phi) {\n    var rho = halfPi - phi,\n        eta = rho ? lambda * sinPsi * sin(rho) / rho : rho;\n    return [rho * sin(eta) / sinPsi, halfPi - rho * cos(eta)];\n  }\n\n  forward.invert = function(x, y) {\n    var x1 = x * sinPsi,\n        y1 = halfPi - y,\n        rho = sqrt(x1 * x1 + y1 * y1),\n        eta = atan2(x1, y1);\n    return [(rho ? rho / sin(rho) : 1) * eta / sinPsi, halfPi - rho];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var sinPsi = 0.5,\n      m = projectionMutator(bottomleyRaw),\n      p = m(sinPsi);\n\n  p.fraction = function(_) {\n    return arguments.length ? m(sinPsi = +_) : sinPsi;\n  };\n\n  return p\n      .scale(158.837);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi} from \"./math\";\nimport {mollweideBromleyRaw} from \"./mollweide\";\n\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\n\nexport default function() {\n  return projection(bromleyRaw)\n      .scale(152.63);\n}\n","import {geoCentroid as centroid, geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon, floor, pi, radians, sin, sqrt} from \"./math\";\n\n// Azimuthal distance.\nfunction distance(dPhi, c1, s1, c2, s2, dLambda) {\n  var cosdLambda = cos(dLambda), r;\n  if (abs(dPhi) > 1 || abs(dLambda) > 1) {\n    r = acos(s1 * s2 + c1 * c2 * cosdLambda);\n  } else {\n    var sindPhi = sin(dPhi / 2), sindLambda = sin(dLambda / 2);\n    r = 2 * asin(sqrt(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));\n  }\n  return abs(r) > epsilon ? [r, atan2(c2 * sin(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];\n}\n\n// Angle opposite a, and contained between sides of lengths b and c.\nfunction angle(b, c, a) {\n  return acos((b * b + c * c - a * a) / (2 * b * c));\n}\n\n// Normalize longitude.\nfunction longitude(lambda) {\n  return lambda - 2 * pi * floor((lambda + pi) / (2 * pi));\n}\n\nexport function chamberlinRaw(p0, p1, p2) {\n  var points = [\n    [p0[0], p0[1], sin(p0[1]), cos(p0[1])],\n    [p1[0], p1[1], sin(p1[1]), cos(p1[1])],\n    [p2[0], p2[1], sin(p2[1]), cos(p2[1])]\n  ];\n\n  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\n    b = points[i];\n    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\n    a.point = [0, 0];\n  }\n\n  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),\n      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),\n      beta2 = pi - beta0;\n\n  points[2].point[1] = 0;\n  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);\n\n  var mean = [\n    points[2].point[0] = points[0].point[0] + points[2].v[0] * cos(beta0),\n    2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * sin(beta0))\n  ];\n\n  function forward(lambda, phi) {\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        v = new Array(3), i;\n\n    // Compute distance and azimuth from control points.\n    for (i = 0; i < 3; ++i) {\n      var p = points[i];\n      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);\n      if (!v[i][0]) return p.point;\n      v[i][1] = longitude(v[i][1] - p.v[1]);\n    }\n\n    // Arithmetic mean of interception points.\n    var point = mean.slice();\n    for (i = 0; i < 3; ++i) {\n      var j = i == 2 ? 0 : i + 1;\n      var a = angle(points[i].v[0], v[i][0], v[j][0]);\n      if (v[i][1] < 0) a = -a;\n\n      if (!i) {\n        point[0] += v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else if (i == 1) {\n        a = beta1 - a;\n        point[0] -= v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else {\n        a = beta2 - a;\n        point[0] += v[i][0] * cos(a);\n        point[1] += v[i][0] * sin(a);\n      }\n    }\n\n    point[0] /= 3, point[1] /= 3;\n    return point;\n  }\n\n  return forward;\n}\n\nfunction pointRadians(p) {\n  return p[0] *= radians, p[1] *= radians, p;\n}\n\nexport function chamberlinAfrica() {\n  return chamberlin([0, 22], [45, 22], [22.5, -22])\n      .scale(380)\n      .center([22.5, 2]);\n}\n\nexport default function chamberlin(p0, p1, p2) { // TODO order matters!\n  var c = centroid({type: \"MultiPoint\", coordinates: [p0, p1, p2]}),\n      R = [-c[0], -c[1]],\n      r = rotation(R),\n      p = projection(chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)))).rotate(R),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p\n      .clipAngle(90);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, pi, sin, sqrt, sqrtPi} from \"./math\";\n\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [(2 / sqrtPi) * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function(x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function() {\n  return projection(collignonRaw)\n      .scale(95.6464)\n      .center([0, 30]);\n}\n","import {asin, atan2, cos, sin, sqrt, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function(x, y) {\n    if (x) y *= sin(x) / x;\n    var cosλ = cos(x);\n    return [x, 2 * atan2(sqrt(cosλ * cosλ + tanPhi0 * tanPhi0 - y * y) - cosλ, tanPhi0 - y)];\n  } : function(x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(craigRaw)\n      .scale(249.828)\n      .clipAngle(90);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt, sqrtPi} from \"./math\";\n\nvar sqrt3 = sqrt(3);\n\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function(x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function() {\n  return projection(crasterRaw)\n      .scale(156.19);\n}\n","import {asin, cos, sin} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalEqualAreaRaw)\n      .parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n      .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}\n","import {atan, cos, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalStereographicRaw)\n      .scale(124.75);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, pi, sqrt} from \"./math\";\n\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [\n    alpha * lambda * (1 - abs(phi) / pi),\n    alpha * phi\n  ];\n}\n\neckert1Raw.invert = function(x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [\n    x / (alpha * (1 - abs(phi) / pi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert1Raw)\n      .scale(165.664);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, pi, sign, sin, sqrt} from \"./math\";\n\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [\n    2 / sqrt(6 * pi) * lambda * alpha,\n    sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)\n  ];\n}\n\neckert2Raw.invert = function(x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [\n    x * sqrt(6 * pi) / (2 * alpha),\n    sign(y) * asin((4 - alpha * alpha) / 3)\n  ];\n};\n\nexport default function() {\n  return projection(eckert2Raw)\n      .scale(165.664);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math\";\n\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [\n    2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))),\n    4 / k * phi\n  ];\n}\n\neckert3Raw.invert = function(x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [\n    x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))),\n    y * k / 2\n  ];\n};\n\nexport default function() {\n  return projection(eckert3Raw)\n      .scale(180.739);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n  return [\n    2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)),\n    2 * sqrt(pi / (4 + pi)) * sin(phi)\n  ];\n}\n\neckert4Raw.invert = function(x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [\n    x / (2 / sqrt(pi * (4 + pi)) * (1 + c)),\n    asin((k + A * (c + 2)) / (2 + halfPi))\n  ];\n};\n\nexport default function() {\n  return projection(eckert4Raw)\n      .scale(180.739);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {cos, pi, sqrt} from \"./math\";\n\nexport function eckert5Raw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / sqrt(2 + pi),\n    2 * phi / sqrt(2 + pi)\n  ];\n}\n\neckert5Raw.invert = function(x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [\n    k * x / (1 + cos(phi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert5Raw)\n      .scale(173.044);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n  k = sqrt(2 + pi);\n  return [\n    lambda * (1 + cos(phi)) / k,\n    2 * phi / k\n  ];\n}\n\neckert6Raw.invert = function(x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [\n    x * 2 * k / (1 + cos(y *= k)),\n    asin((y + sin(y)) / j)\n  ];\n};\n\nexport default function() {\n  return projection(eckert6Raw)\n      .scale(173.044);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {augustRaw} from \"./august\";\nimport {abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2} from \"./math\";\n\nvar eisenlohrK = 3 + 2 * sqrt2;\n\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [\n    eisenlohrK * (c * (v - 1 / v) - 2 * log(v)),\n    eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))\n  ];\n}\n\neisenlohrRaw.invert = function(x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0], phi = p[1], i = 20, p;\n  x /= eisenlohrK, y /= eisenlohrK;\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = (sqrt2 * c1 + (c0 + s0) * k),\n        v1 = (sqrt2 * c1 + (c0 - s0) * k),\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(eisenlohrRaw)\n      .scale(62.5271);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, radians, sqrt, tan} from \"./math\";\n\nvar faheyK = cos(35 * radians);\n\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function(x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function() {\n  return projection(faheyRaw)\n      .scale(137.152);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, sqrtPi, tan} from \"./math\";\n\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2, cosk = cos(k);\n  return [ 2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function(x, y) {\n  var k = atan(y / sqrtPi), cosk = cos(k), phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function() {\n  return projection(foucautRaw)\n      .scale(135.264);\n}\n","import {geoEquirectangular, geoOrthographic} from \"d3-geo\";\nimport {asin, atan, degrees, radians, sin, tan} from \"./math\";\n\nfunction gilbertForward(point) {\n  return [point[0] / 2, asin(tan(point[1] / 2 * radians)) * degrees];\n}\n\nfunction gilbertInvert(point) {\n  return [point[0] * 2, 2 * atan(sin(point[1] * radians)) * degrees];\n}\n\nexport default function(projectionType) {\n  if (projectionType == null) projectionType = geoOrthographic;\n  var projection = projectionType(),\n      equirectangular = geoEquirectangular().scale(degrees).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting\n\n  function gilbert(point) {\n    return projection(gilbertForward(point));\n  }\n\n  if (projection.invert) gilbert.invert = function(point) {\n    return gilbertInvert(projection.invert(point));\n  };\n\n  gilbert.stream = function(stream) {\n    var s1 = projection.stream(stream), s0 = equirectangular.stream({\n      point: function(lambda, phi) { s1.point(lambda / 2, asin(tan(-phi / 2 * radians)) * degrees); },\n      lineStart: function() { s1.lineStart(); },\n      lineEnd: function() { s1.lineEnd(); },\n      polygonStart: function() { s1.polygonStart(); },\n      polygonEnd: function() { s1.polygonEnd(); }\n    });\n    s0.sphere = s1.sphere;\n    return s0;\n  };\n\n  function property(name) {\n    gilbert[name] = function(_) {\n      return arguments.length ? (projection[name](_), gilbert) : projection[name]();\n    };\n  }\n\n  gilbert.rotate = function(_) {\n    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();\n  };\n\n  gilbert.center = function(_) {\n    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());\n  };\n\n  property(\"clipAngle\");\n  property(\"clipExtent\");\n  property(\"scale\");\n  property(\"translate\");\n  property(\"precision\");\n\n  return gilbert\n      .scale(249.5);\n}\n","import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt} from \"./math\";\n\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n\n      x = r;\n      var i = 50, delta;\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n    return p;\n  }\n\n  forward.invert = function(x, y) {\n    var r2 = x * x + y * y;\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n\n        if (abs(delta) < epsilon2 || !--i) break;\n\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (\n          sinx - x_halfPi * 2 * (\n            halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) -\n            rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)\n          ) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function(x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n}\n\n// Numerical integration: trapezoidal rule.\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n  for (var i = 1, x = a; i < n; ++i) s += 2 * f(x += h);\n  return s * 0.5 * h;\n}\n\nexport default function() {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function(_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function(_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .rotate([90, -40])\n      .scale(91.7095)\n      .clipAngle(180 - 1e-3);\n}\n","import {abs, asin, cos, epsilon, pi, sin, sqrt} from \"./math\";\n\nexport default function(a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda, deltaPhi, i = 50;\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = ((lambda / pi) * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi)) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n    return [lambda, phi];\n  };\n\n  return forward;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\n\nexport default function() {\n  return projection(ginzburg4Raw)\n      .scale(149.995);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435,0.082742);\n\nexport default function() {\n  return projection(ginzburg5Raw)\n      .scale(153.93);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nimport {pi} from \"./math\";\n\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\n\nexport default function() {\n  return projection(ginzburg6Raw)\n      .scale(130.945);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [\n    lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2),\n    phi * (1 + phi2 / 12)\n  ];\n}\n\nginzburg8Raw.invert = function(x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50, delta;\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n  i = 50;\n  x /= 1 -0.162388 * phi2;\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(ginzburg8Raw)\n      .scale(131.747);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965,0.031762);\n\nexport default function() {\n  return projection(ginzburg9Raw)\n      .scale(131.087);\n}\n","import {halfPi, pi} from \"./math\";\n\nexport default function(project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectSquare(lambda, phi) {\n    var s = lambda > 0 ? -0.5 : 0.5,\n        point = project(lambda + s * pi, phi);\n    point[0] -= s * dx;\n    return point;\n  }\n\n  if (project.invert) projectSquare.invert = function(x, y) {\n    var s = x > 0 ? -0.5 : 0.5,\n        location = project.invert(x + s * dx, y),\n        lambda = location[0] - s * pi;\n    if (lambda < -pi) lambda += 2 * pi;\n    else if (lambda > pi) lambda -= 2 * pi;\n    location[0] = lambda;\n    return location;\n  };\n\n  return projectSquare;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt} from \"./math\";\nimport squareRaw from \"./square\";\n\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return (point[0] *= sLambda, point[1] *= -sPhi, point);\n}\n\ngringortenRaw.invert = function(x, y) {\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n\n  if (lambda === 0) return [0, -(h + r * a)];\n\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = (0.5 * dp2dPhi) / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta;\n\n  // Slower but accurate bisection method.\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x, x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n    do {\n      var g = sqrt(a2 - x * x),\n          f = (x * (zeta + mu * g) + nu * asin(x / a)) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;\n      else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  }\n\n  // Newton-Raphson.\n  else {\n    x = epsilon, i = 25;\n    do {\n      var x2 = x * x,\n          g2 = sqrt(a2 - x2),\n          zetaMug = zeta + mu * g2,\n          f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n          df = zetaMug + (nu - mu * x2) / g2;\n      x -= delta = g2 ? f2 / df : 0;\n    } while (abs(delta) > epsilon && --i > 0);\n  }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = (1 - r2) + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;\n    else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function() {\n  return projection(squareRaw(gringortenRaw))\n      .scale(239.75);\n}\n","import {abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh} from \"./math\";\n\n// Returns [sn, cn, dn](u + iv|m).\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [\n      [0, b[0] / b[1]],\n      [1 / b[1], 0],\n      [b[2] / b[1], 0]\n    ];\n  }\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [\n    [a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c],\n    [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c],\n    [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]\n  ];\n}\n\n// Returns [sn, cn, dn, ph](u|m).\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [\n      t - ai * b,\n      b + ai * t,\n      1 - m * t * t / 2,\n      u - ai\n    ];\n  }\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [\n      t + ai * (twon - u) / (b * b),\n      phi - ai * t * phi * (twon - u),\n      phi + ai * t * phi * (twon + u),\n      2 * atan(exp(u)) - halfPi + ai * (twon - u) / b\n    ];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n}\n\n// Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [\n      ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi),\n      ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)\n    ];\n  }\n  return [\n    0,\n    ellipticF(atan(sinhPsi), 1 - m) * sign(psi)\n  ];\n}\n\n// Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n  return phi / (pow(2, i) * a);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {ellipticF, ellipticFi, ellipticJi} from \"./elliptic\";\nimport {abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan} from \"./math\";\nimport squareRaw from \"./square\";\n\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [\n   0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)),\n    -0.25 * log(t * t + 4 * x2) +0.5 * log(y_1 * y_1 + x2)\n  ];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [\n    (a[0] * b[0] + a[1] * b[1]) / denominator,\n    (a[1] * b[0] - a[0] * b[1]) / denominator\n  ];\n}\n\nguyouRaw.invert = function(x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [\n    lambda,\n    2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi\n  ];\n};\n\nexport default function() {\n  return projection(squareRaw(guyouRaw))\n      .scale(151.496);\n}\n","import {geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {asin, cos, sin} from \"./math\";\n\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [\n    lambda * cos(phi) / cos(phi /= 2),\n    2 * sin(phi)\n  ];\n}\n\nhammerQuarticAuthalicRaw.invert = function(x, y) {\n  var phi = 2 * asin(y / 2);\n  return [\n    x * cos(phi / 2) / cos(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function(_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p\n    .scale(169.529);\n}\n","import {geoProjectionMutator as projectionMutator, geoCircle} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin} from \"./math\";\n\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [\n      K * cosPhi0 * sin(lambda),\n      (abs(lambda) > halfPi ? K : -K) // rotate for back hemisphere\n        * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n}\n\n// Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n\n  return function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [\n      atan2(y, x * cosPhi0 - z * sinPhi0),\n      asin(z * cosPhi0 + x * sinPhi0)\n    ];\n  };\n}\n\nexport default function() {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  };\n\n  // Temporary hack; see hammerRetroazimuthalRotation.\n  p.rotate = function(_) {\n    if (!arguments.length) return (_ = rotate_.call(p), _[1] += phi0 * degrees, _);\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function(stream) {\n    stream = stream_(stream);\n    stream.sphere = function() {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n      while (++i < n) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n      while (--i >= 0) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n    return stream;\n  };\n\n  return p\n      .scale(79.4187)\n      .parallel(45)\n      .clipAngle(180 - 1e-3);\n}\n","import {range} from \"d3-array\";\nimport {geoStream, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {collignonRaw} from \"./collignon\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\nimport {abs, floor, max, min, pi, radians, sqrtPi, tau} from \"./math\";\n\nvar healpixParallel = 41 + 48 / 36 + 37 / 3600, // for K=3; TODO automate\n    healpixLambert = cylindricalEqualAreaRaw(0);\n\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + (dy1 * dy1 * 4) / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function(x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphere(step) {\n  return {\n    type: \"Polygon\",\n    coordinates: [\n      range(-180, 180 + step / 2, step).map(function(x, i) { return [x, i & 1 ? 90 - 1e-6 : healpixParallel]; })\n      .concat(range(180, -180 - step / 2, -step).map(function(x, i) { return [x, i & 1 ? -90 + 1e-6 : -healpixParallel]; }))\n    ]\n  };\n}\n\nexport default function() {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function(_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere(180 / H), sphereStream); };\n    return rotateStream;\n  };\n\n  return p\n      .scale(239.75);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n    if (t && t < 2) {\n      var theta = halfPi - phi, i = 25, delta;\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 -0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n    return [\n      rho * sin(omega),\n      rho0 - rho * cos(omega)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [\n      asin(x / sqrt(rho2)) * pi / Bt_Bt1,\n      asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function(_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p\n      .scale(167.774)\n      .center([0, 18.67]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideRaw} from \"./mollweide\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\n\nexport var sinuMollweidePhi = 0.7109889596207567;\n\nexport var sinuMollweideY = 0.0528035274542;\n\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function(x, y) {\n  return y > -sinuMollweidePhi\n      ? mollweideRaw.invert(x, y - sinuMollweideY)\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(sinuMollweideRaw)\n      .rotate([-20, -55])\n      .scale(164.263)\n      .center([0, -5.4036]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs} from \"./math\";\nimport {mollweideRaw} from \"./mollweide\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\nimport {sinuMollweidePhi, sinuMollweideY} from \"./sinuMollweide\";\n\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function(x, y) {\n  return abs(y) > sinuMollweidePhi\n      ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY))\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(homolosineRaw)\n      .scale(152.63);\n}\n","import {merge} from \"d3-array\";\nimport {geoStream, geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, radians} from \"../math\";\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction interpolateLine(coordinates, m) {\n  var i = -1,\n      n = coordinates.length,\n      p0 = coordinates[0],\n      p1,\n      dx,\n      dy,\n      resampled = [];\n  while (++i < n) {\n    p1 = coordinates[i];\n    dx = (p1[0] - p0[0]) / m;\n    dy = (p1[1] - p0[1]) / m;\n    for (var j = 0; j < m; ++j) resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n    p0 = p1;\n  }\n  resampled.push(p1);\n  return resampled;\n}\n\nfunction interpolateSphere(lobes) {\n  var coordinates = [],\n      lobe,\n      lambda0, phi0, phi1,\n      lambda2, phi2,\n      i, n = lobes[0].length;\n\n  // Northern Hemisphere\n  for (i = 0; i < n; ++i) {\n    lobe = lobes[0][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([\n      [lambda0 + epsilon, phi0 + epsilon],\n      [lambda0 + epsilon, phi1 - epsilon],\n      [lambda2 - epsilon, phi1 - epsilon],\n      [lambda2 - epsilon, phi2 + epsilon]\n    ], 30));\n  }\n\n  // Southern Hemisphere\n  for (i = lobes[1].length - 1; i >= 0; --i) {\n    lobe = lobes[1][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([\n      [lambda2 - epsilon, phi2 - epsilon],\n      [lambda2 - epsilon, phi1 + epsilon],\n      [lambda0 + epsilon, phi1 + epsilon],\n      [lambda0 + epsilon, phi0 - epsilon]\n    ], 30));\n  }\n\n  return {\n    type: \"Polygon\",\n    coordinates: [merge(coordinates)]\n  };\n}\n\nexport default function(project, lobes) {\n  var sphere = interpolateSphere(lobes);\n\n  lobes = lobes.map(function(lobe) {\n    return lobe.map(function(l) {\n      return [\n        [l[0][0] * radians, l[0][1] * radians],\n        [l[1][0] * radians, l[1][1] * radians],\n        [l[2][0] * radians, l[2][1] * radians]\n      ];\n    });\n  });\n\n  var bounds = lobes.map(function(lobe) {\n    return lobe.map(function(l) {\n      var x0 = project(l[0][0], l[0][1])[0],\n          x1 = project(l[2][0], l[2][1])[0],\n          y0 = project(l[1][0], l[0][1])[1],\n          y1 = project(l[1][0], l[1][1])[1],\n          t;\n      if (y0 > y1) t = y0, y0 = y1, y1 = t;\n      return [[x0, y0], [x1, y1]];\n    });\n  });\n\n  function forward(lambda, phi) {\n    var sign = phi < 0 ? -1 : +1, lobe = lobes[+(phi < 0)];\n    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i);\n    var p = project(lambda - lobe[i][1][0], phi);\n    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];\n    return p;\n  }\n\n  // Assumes mutually exclusive bounding boxes for lobes.\n  if (project.invert) forward.invert = function(x, y) {\n    var bound = bounds[+(y < 0)], lobe = lobes[+(y < 0)];\n    for (var i = 0, n = bound.length; i < n; ++i) {\n      var b = bound[i];\n      if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n        var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);\n        p[0] += lobe[i][1][0];\n        return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;\n      }\n    }\n  };\n\n  var p = projection(forward),\n      stream_ = p.stream;\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere, sphereStream); };\n    return rotateStream;\n  };\n\n  return p;\n}\n","import {boggsRaw} from \"../boggs\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(boggsRaw, lobes)\n      .scale(160.857);\n}\n","import {homolosineRaw} from \"../homolosine\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(homolosineRaw, lobes)\n      .scale(152.63);\n}\n","import {mollweideRaw} from \"../mollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(mollweideRaw, lobes)\n      .scale(169.529);\n}\n","import {mollweideRaw} from \"../mollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [ -90,  90], [   0,   0]],\n  [[   0,   0], [  90,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [ -90, -90], [   0,   0]],\n  [[   0,   0], [  90, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(mollweideRaw, lobes)\n      .scale(169.529)\n      .rotate([20, 0]);\n}\n","import {sinuMollweideRaw} from \"../sinuMollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,  35], [ -30,  90], [   0,  35]],\n  [[   0,  35], [  30,  90], [ 180,  35]]\n], [ // southern hemisphere\n  [[-180, -10], [-102, -90], [ -65, -10]],\n  [[ -65, -10], [   5, -90], [  77, -10]],\n  [[  77, -10], [ 103, -90], [ 180, -10]]\n]];\n\nexport default function() {\n  return interrupt(sinuMollweideRaw, lobes)\n      .rotate([-20, -55])\n      .scale(164.263)\n      .center([0, -5.4036]);\n}\n","import {sinusoidalRaw} from \"../sinusoidal\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-110,  90], [ -40,   0]],\n  [[ -40,   0], [   0,  90], [  40,   0]],\n  [[  40,   0], [ 110,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-110, -90], [ -40,   0]],\n  [[ -40,   0], [   0, -90], [  40,   0]],\n  [[  40,   0], [ 110, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(sinusoidalRaw, lobes)\n      .scale(152.63)\n      .rotate([-20, 0]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt, tau} from \"./math\";\n\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function(x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function() {\n  return projection(kavrayskiy7Raw)\n      .scale(158.837);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin} from \"./math\";\n\nexport function lagrangeRaw(n) {\n\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [\n      2 * sin(lambda) / c,\n      (v - 1 / v) / c\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [\n      atan2(2 * x, 1 - x2 - y2) / n,\n      asin((t - 1) / (t + 1))\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function(_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p\n      .scale(124.75);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2} from \"./math\";\n\nvar pi_sqrt2 = pi / sqrt2;\n\nexport function larriveeRaw(lambda, phi) {\n  return [\n    lambda * (1 + sqrt(cos(phi))) / 2,\n    phi / (cos(phi / 2) * cos(lambda / 6))\n  ];\n}\n\nlarriveeRaw.invert = function(x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;\n  else lambda += 6 * acos(pi_sqrt2 / y0);\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 +0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function() {\n  return projection(larriveeRaw)\n      .scale(97.2672);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, pi, sign} from \"./math\";\n\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda, phi2 = phi * phi;\n  return [\n    lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)),\n    phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))\n  ];\n}\n\nlaskowskiRaw.invert = function(x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(laskowskiRaw)\n      .scale(139.98);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2} from \"./math\";\n\nexport function littrowRaw(lambda, phi) {\n  return [\n    sin(lambda) / cos(phi),\n    tan(phi) * cos(lambda)\n  ];\n}\n\nlittrowRaw.invert = function(x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      cosPhi = x\n          ? sqrt1_2 * sqrt((y2_1 - sqrt(x2 * x2 + 2 * x2 * (y2 - 1) + y2_1 * y2_1)) / x2 + 1)\n          : 1 / sqrt(y2_1);\n  return [\n    asin(x * cosPhi),\n    sign(y) * acos(cosPhi)\n  ];\n};\n\nexport default function() {\n  return projection(littrowRaw)\n      .scale(144.049)\n      .clipAngle(90 - 1e-3);\n}\n","import parallel1 from \"./parallel1\";\nimport {abs, cos, epsilon, halfPi, log, quarterPi, tan} from \"./math\";\n\nexport function loximuthalRaw(phi0) {\n  var cosPhi0 = cos(phi0),\n      tanPhi0 = tan(quarterPi + phi0 / 2);\n\n  function forward(lambda, phi) {\n    var y = phi - phi0,\n        x = abs(y) < epsilon ? lambda * cosPhi0\n            : abs(x = quarterPi + phi / 2) < epsilon || abs(abs(x) - halfPi) < epsilon\n            ? 0 : lambda * y / log(tan(x) / tanPhi0);\n    return [x, y];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda,\n        phi = y + phi0;\n    return [\n      abs(y) < epsilon ? x / cosPhi0\n          : (abs(lambda = quarterPi + phi / 2) < epsilon || abs(abs(lambda) - halfPi) < epsilon) ? 0\n          : x * log(tan(lambda) / tanPhi0) / y,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(loximuthalRaw)\n      .parallel(40)\n      .scale(158.837);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n","import {geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {abs, asin, atan, atan2, cos, epsilon, sin, sqrt} from \"./math\";\n\nexport function modifiedStereographicRaw(C) {\n  var m = C.length - 1;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = 2 / (1 + cosPhi * cos(lambda)),\n        zr = k * cosPhi * sin(lambda),\n        zi = k * sin(phi),\n        i = m,\n        w = C[i],\n        ar = w[0],\n        ai = w[1],\n        t;\n    while (--i >= 0) {\n      w = C[i];\n      ar = w[0] + zr * (t = ar) - zi * ai;\n      ai = w[1] + zr * ai + zi * t;\n    }\n    ar = zr * (t = ar) - zi * ai;\n    ai = zr * ai + zi * t;\n    return [ar, ai];\n  }\n\n  forward.invert = function(x, y) {\n    var i = 20,\n        zr = x,\n        zi = y;\n    do {\n      var j = m,\n          w = C[j],\n          ar = w[0],\n          ai = w[1],\n          br = 0,\n          bi = 0,\n          t;\n\n      while (--j >= 0) {\n        w = C[j];\n        br = ar + zr * (t = br) - zi * bi;\n        bi = ai + zr * bi + zi * t;\n        ar = w[0] + zr * (t = ar) - zi * ai;\n        ai = w[1] + zr * ai + zi * t;\n      }\n      br = ar + zr * (t = br) - zi * bi;\n      bi = ai + zr * bi + zi * t;\n      ar = zr * (t = ar) - zi * ai - x;\n      ai = zr * ai + zi * t - y;\n\n      var denominator = br * br + bi * bi, deltar, deltai;\n      zr -= deltar = (ar * br + ai * bi) / denominator;\n      zi -= deltai = (ai * br - ar * bi) / denominator;\n    } while (abs(deltar) + abs(deltai) > epsilon * epsilon && --i > 0);\n\n    if (i) {\n      var rho = sqrt(zr * zr + zi * zi),\n          c = 2 * atan(rho * 0.5),\n          sinc = sin(c);\n      return [atan2(zr * sinc, rho * cos(c)), rho ? asin(zi * sinc / rho) : 0];\n    }\n  };\n\n  return forward;\n}\n\nvar alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],\n    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],\n    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],\n    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],\n    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];\n\nexport function modifiedStereographicAlaska() {\n  return modifiedStereographic(alaska, [152, -64])\n      .scale(1500)\n      .center([-160.908, 62.4864])\n      .clipAngle(25);\n}\n\nexport function modifiedStereographicGs48() {\n  return modifiedStereographic(gs48, [95, -38])\n      .scale(1000)\n      .clipAngle(55)\n      .center([-96.5563, 38.8675]);\n}\n\nexport function modifiedStereographicGs50() {\n  return modifiedStereographic(gs50, [120, -45])\n      .scale(359.513)\n      .clipAngle(55)\n      .center([-117.474, 53.0628]);\n}\n\nexport function modifiedStereographicMiller() {\n  return modifiedStereographic(miller, [-20, -18])\n      .scale(209.091)\n      .center([20, 16.7214])\n      .clipAngle(82);\n}\n\nexport function modifiedStereographicLee() {\n  return modifiedStereographic(lee, [165, 10])\n      .scale(250)\n      .clipAngle(130)\n      .center([-165, -10]);\n}\n\nexport default function modifiedStereographic(coefficients, rotate) {\n  var p = projection(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),\n      r = rotation(rotate),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt} from \"./math\";\n\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\n\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [\n    sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7,\n    9 * sin(theta / 3) / sqrt7\n  ];\n}\n\nmtFlatPolarParabolicRaw.invert = function(x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [\n    x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)),\n    asin(sin(theta) * 3 * sqrt6 / 7)\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarParabolicRaw)\n      .scale(164.859);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2} from \"./math\";\n\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2),\n    2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)\n  ];\n}\n\nmtFlatPolarQuarticRaw.invert = function(x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [\n    3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)),\n    asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarQuarticRaw)\n      .scale(188.209);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    A * (0.5 + cos(theta)) * lambda / 1.5,\n    A * theta\n  ];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function(x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [\n    1.5 * x / (A * (0.5 + cos(theta))),\n    asin((theta / 2 + sin(theta)) / (1 + pi / 4))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarSinusoidalRaw)\n      .scale(166.518);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\nexport function naturalEarthRaw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarthRaw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarthRaw)\n      .scale(175.295);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, epsilon, tan} from \"./math\";\n\nexport function nellHammerRaw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / 2,\n    2 * (phi - tan(phi / 2))\n  ];\n}\n\nnellHammerRaw.invert = function(x, y) {\n  var p = y / 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n  return [\n    2 * x / (1 + cos(y)),\n    y\n  ];\n};\n\nexport default function() {\n  return projection(nellHammerRaw)\n      .scale(152.63);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\n// Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\n\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [\n    lambda,\n    phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))\n  ];\n}\n\npattersonRaw.invert = function(x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;\n  else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y, delta;\n\n  do { // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = ((yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2)))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function() {\n  return projection(pattersonRaw)\n      .scale(139.319);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan} from \"./math\";\n\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [\n    sin(k) / tanPhi,\n    phi + (1 - cos(k)) / tanPhi\n  ];\n}\n\npolyconicRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10, delta;\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n  tanPhi = tan(phi);\n  return [\n    (abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(polyconicRaw)\n      .scale(103.74);\n}\n","import {atan2, cos, sin, sqrt} from \"../math\";\n\n// Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n\n// Transform matrix for [a0, a1] -> [b0, b1].\nexport default function(a, b) {\n  var u = subtract(a[1], a[0]),\n      v = subtract(b[1], b[0]),\n      phi = angle(u, v),\n      s = length(u) / length(v);\n\n  return multiply([\n    1, 0, a[0][0],\n    0, 1, a[0][1]\n  ], multiply([\n    s, 0, 0,\n    0, s, 0\n  ], multiply([\n    cos(phi), sin(phi), 0,\n    -sin(phi), cos(phi), 0\n  ], [\n    1, 0, -b[0][0],\n    0, 1, -b[0][1]\n  ])));\n}\n\n// Inverts a transform matrix.\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [\n    k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]),\n    -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])\n  ];\n}\n\n// Multiplies two 3x2 matrices.\nexport function multiply(a, b) {\n  return [\n    a[0] * b[0] + a[1] * b[3],\n    a[0] * b[1] + a[1] * b[4],\n    a[0] * b[2] + a[1] * b[5] + a[2],\n    a[3] * b[0] + a[4] * b[3],\n    a[3] * b[1] + a[4] * b[4],\n    a[3] * b[2] + a[4] * b[5] + a[5]\n  ];\n}\n\n// Subtracts 2D vectors.\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n}\n\n// Magnitude of a 2D vector.\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n\n// Angle between two 2D vectors.\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}\n","import {geoBounds as bounds, geoCentroid as centroid, geoInterpolate as interpolate, geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, degrees, epsilon, pi, radians, sin} from \"../math\";\nimport {default as matrix, multiply, inverse} from \"./matrix\";\n\n// Creates a polyhedral projection.\n//  * root: a spanning tree of polygon faces.  Nodes are automatically\n//    augmented with a transform matrix.\n//  * face: a function that returns the appropriate node for a given {lambda, phi}\n//    point (radians).\n//  * r: rotation angle for final polyhedral net.  Defaults to -pi / 6 (for\n//    butterflies).\nexport default function(root, face, r) {\n\n  r = r == null ? -pi / 6 : r; // TODO automate\n\n  recurse(root, {transform: [\n    cos(r), sin(r), 0,\n    -sin(r), cos(r), 0\n  ]});\n\n  function recurse(node, parent) {\n    node.edges = faceEdges(node.face);\n    // Find shared edge.\n    if (parent.face) {\n      var shared = node.shared = sharedEdge(node.face, parent.face),\n          m = matrix(shared.map(parent.project), shared.map(node.project));\n      node.transform = parent.transform ? multiply(parent.transform, m) : m;\n      // Replace shared edge in parent edges array.\n      var edges = parent.edges;\n      for (var i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;\n      }\n      edges = node.edges;\n      for (i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;\n      }\n    } else {\n      node.transform = parent.transform;\n    }\n    if (node.children) {\n      node.children.forEach(function(child) {\n        recurse(child, node);\n      });\n    }\n    return node;\n  }\n\n  function forward(lambda, phi) {\n    var node = face(lambda, phi),\n        point = node.project([lambda * degrees, phi * degrees]),\n        t;\n    if (t = node.transform) {\n      return [\n        t[0] * point[0] + t[1] * point[1] + t[2],\n        -(t[3] * point[0] + t[4] * point[1] + t[5])\n      ];\n    }\n    point[1] = -point[1];\n    return point;\n  }\n\n  // Naive inverse!  A faster solution would use bounding boxes, or even a\n  // polygonal quadtree.\n  if (hasInverse(root)) forward.invert = function(x, y) {\n    var coordinates = faceInvert(root, [x, -y]);\n    return coordinates && (coordinates[0] *= radians, coordinates[1] *= radians, coordinates);\n  };\n\n  function faceInvert(node, coordinates) {\n    var invert = node.project.invert,\n        t = node.transform,\n        point = coordinates;\n    if (t) {\n      t = inverse(t);\n      point = [\n        t[0] * point[0] + t[1] * point[1] + t[2],\n        (t[3] * point[0] + t[4] * point[1] + t[5])\n      ];\n    }\n    if (invert && node === faceDegrees(p = invert(point))) return p;\n    var p,\n        children = node.children;\n    for (var i = 0, n = children && children.length; i < n; ++i) {\n      if (p = faceInvert(children[i], coordinates)) return p;\n    }\n  }\n\n  function faceDegrees(coordinates) {\n    return face(coordinates[0] * radians, coordinates[1] * radians);\n  }\n\n  var proj = projection(forward),\n      stream_ = proj.stream;\n\n  proj.stream = function(stream) {\n    var rotate = proj.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (proj.rotate([0, 0]), stream_(stream));\n    proj.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart();\n      sphereStream.lineStart();\n      outline(sphereStream, root);\n      sphereStream.lineEnd();\n      sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return proj;\n}\n\nfunction outline(stream, node, parent) {\n  var point,\n      edges = node.edges,\n      n = edges.length,\n      edge,\n      multiPoint = {type: \"MultiPoint\", coordinates: node.face},\n      notPoles = node.face.filter(function(d) { return abs(d[1]) !== 90; }),\n      b = bounds({type: \"MultiPoint\", coordinates: notPoles}),\n      inside = false,\n      j = -1,\n      dx = b[1][0] - b[0][0];\n  // TODO\n  var c = dx === 180 || dx === 360\n      ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2]\n      : centroid(multiPoint);\n  // First find the shared edge…\n  if (parent) while (++j < n) {\n    if (edges[j] === parent) break;\n  }\n  ++j;\n  for (var i = 0; i < n; ++i) {\n    edge = edges[(i + j) % n];\n    if (Array.isArray(edge)) {\n      if (!inside) {\n        stream.point((point = interpolate(edge[0], c)(epsilon))[0], point[1]);\n        inside = true;\n      }\n      stream.point((point = interpolate(edge[1], c)(epsilon))[0], point[1]);\n    } else {\n      inside = false;\n      if (edge !== parent) outline(stream, edge, node);\n    }\n  }\n}\n\n// Tests equality of two spherical points.\nfunction pointEqual(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\n\n// Finds a shared edge given two clockwise polygons.\nfunction sharedEdge(a, b) {\n  var x, y, n = a.length, found = null;\n  for (var i = 0; i < n; ++i) {\n    x = a[i];\n    for (var j = b.length; --j >= 0;) {\n      y = b[j];\n      if (x[0] === y[0] && x[1] === y[1]) {\n        if (found) return [found, x];\n        found = x;\n      }\n    }\n  }\n}\n\n// Converts an array of n face vertices to an array of n + 1 edges.\nfunction faceEdges(face) {\n  var n = face.length,\n      edges = [];\n  for (var a = face[n - 1], i = 0; i < n; ++i) edges.push([a, a = face[i]]);\n  return edges;\n}\n\nfunction hasInverse(node) {\n  return node.project.invert || node.children && node.children.some(hasInverse);\n}\n","// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [\n  [0, 90],\n  [-90, 0], [0, 0], [90, 0], [180, 0],\n  [0, -90]\n];\n\nexport default [\n  [0, 2, 1],\n  [0, 3, 2],\n  [5, 1, 2],\n  [5, 2, 3],\n  [0, 1, 4],\n  [0, 4, 3],\n  [5, 4, 1],\n  [5, 3, 4]\n].map(function(face) {\n  return face.map(function(i) {\n    return octahedron[i];\n  });\n});\n","import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {pi} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .scale(101.858)\n      .center([0, 45]);\n}\n","import {geoCentroid as centroid, geoProjection as projection} from \"d3-geo\";\nimport {collignonRaw} from \"../collignon\";\nimport {pi, sqrt} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function(x,y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .scale(121.906)\n      .center([0, 48.5904]);\n}\n","import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {asin, atan2, cos, degrees, max, min, pi, radians, sin} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = face.length === 6 ? centroid({type: \"MultiPoint\", coordinates: face}) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function(face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([\n        a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794,\n        a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794,\n        a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794\n      ]), spherical([\n        b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794,\n        b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794,\n        b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794\n      ]));\n      a = b;\n    }\n    return hexagon;\n  });\n\n  var cornerNormals = [];\n\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n\n  w5.forEach(function(hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n    for (var i = 0; i < n; ++i) {\n      w5.push([\n        face[i],\n        hexagon[(i * 2 + 2) % (2 * n)],\n        hexagon[(i * 2 + 1) % (2 * n)]\n      ]);\n      parents.push(j);\n      normals.push(cross(\n        cartesian(hexagon[(i * 2 + 2) % (2 * n)]),\n        cartesian(hexagon[(i * 2 + 1) % (2 * n)])\n      ));\n    }\n  });\n\n  var faces = w5.map(function(face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n\n  parents.forEach(function(d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4\n        : lambda < 0 ? phi < 0 ? 2 : 0\n        : lambda < pi / 2 ? phi < 0 ? 3 : 1\n        : phi < 0 ? 7 : 5;\n\n    var n = cornerNormals[hexagon];\n\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon\n        : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1\n        : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2\n        : hexagon];\n  }\n\n  return polyhedral(faces[0], face)\n      .scale(110.625)\n      .center([0,45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) s += a[i] * b[i];\n  return s;\n}\n\nfunction cross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0]\n  ];\n}\n\n// Converts 3D Cartesian to spherical coordinates (degrees).\nfunction spherical(cartesian) {\n  return [\n    atan2(cartesian[1], cartesian[0]) * degrees,\n    asin(max(-1, min(1, cartesian[2]))) * degrees\n  ];\n}\n\n// Converts spherical coordinates (degrees) to 3D Cartesian.\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [\n    cosphi * cos(lambda),\n    cosphi * sin(lambda),\n    sin(phi)\n  ];\n}\n","export default function() {}\n","import {geoStream} from \"d3-geo\";\nimport noop from \"../noop\";\nimport clockwise from \"./clockwise\";\nimport contains from \"./contains\";\n\nexport default function(object, projection) {\n  var stream = projection.stream, project;\n  if (!stream) throw new Error(\"invalid projection\");\n  switch (object && object.type) {\n    case \"Feature\": project = projectFeature; break;\n    case \"FeatureCollection\": project = projectFeatureCollection; break;\n    default: project = projectGeometry; break;\n  }\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function(f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function(o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n  switch (o.type) {\n    case \"Point\": sink = sinkPoint; break;\n    case \"MultiPoint\": sink = sinkPoint; break;\n    case \"LineString\": sink = sinkLine; break;\n    case \"MultiLineString\": sink = sinkLine; break;\n    case \"Polygon\": sink = sinkPolygon; break;\n    case \"MultiPolygon\": sink = sinkPolygon; break;\n    case \"Sphere\": sink = sinkPolygon; break;\n    default: return null;\n  }\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\n\nvar sinkPoint = {\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  result: function() {\n    var result = !points.length ? null\n        : points.length < 2 ? {type: \"Point\", coordinates: points[0]}\n        : {type: \"MultiPoint\", coordinates: points};\n    points = [];\n    return result;\n  }\n};\n\nvar sinkLine = {\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function() {\n    var result = !lines.length ? null\n        : lines.length < 2 ? {type: \"LineString\", coordinates: lines[0]}\n        : {type: \"MultiLineString\", coordinates: lines};\n    lines = [];\n    return result;\n  }\n};\n\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    var n = points.length;\n    if (n) {\n      do points.push(points[0].slice()); while (++n < 4);\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = [];\n\n    // https://github.com/d3/d3/issues/1558\n    lines.forEach(function(ring) {\n      if (clockwise(ring)) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      var point = hole[0];\n      polygons.some(function(polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n\n    lines = [];\n\n    return !polygons.length ? null\n        : polygons.length > 1 ? {type: \"MultiPolygon\", coordinates: polygons}\n        : {type: \"Polygon\", coordinates: polygons[0]};\n  }\n};\n","export default function(ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0,\n      n,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area <= 0;\n}\n","export default function(ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = false;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1],\n        pj = ring[j], xj = pj[0], yj = pj[1];\n    if (((yi > y) ^ (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)) contains = !contains;\n  }\n  return contains;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, halfPi, pi, sign, sqrt1_2} from \"../math\";\n\nexport default function(project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function(x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * (x0 + (y > 0 ? 1 : -1) * d),\n          y1 = -s * (y0 + (x > 0 ? 1 : -1) * d);\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n\n  return projection(projectQuincuncial)\n      .rotate([-90, -90, 45])\n      .clipAngle(180 - 1e-3);\n}\n","import {gringortenRaw} from \"../gringorten\";\nimport quincuncial from \"./index\";\n\nexport default function() {\n  return quincuncial(gringortenRaw)\n      .scale(176.423);\n}\n","import {guyouRaw} from \"../guyou\";\nimport quincuncial from \"./index\";\n\nexport default function() {\n  return quincuncial(guyouRaw)\n      .scale(111.48);\n}\n","export default function(o, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(coordinates) {\n    coordinates[0] = +coordinates[0].toFixed(digits);\n    coordinates[1] = +coordinates[1].toFixed(digits);\n  }\n\n  function quantizePoints(coordinates) {\n    coordinates.forEach(quantizePoint);\n  }\n\n  function quantizePolygon(coordinates) {\n    coordinates.forEach(quantizePoints);\n  }\n\n  function quantizeGeometry(o) {\n    if (o) switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(quantizeGeometry); break;\n      case \"Point\": quantizePoint(o.coordinates); break;\n      case \"MultiPoint\": case \"LineString\": quantizePoints(o.coordinates); break;\n      case \"MultiLineString\": case \"Polygon\": quantizePolygon(o.coordinates); break;\n      case \"MultiPolygon\": o.coordinates.forEach(quantizePolygon); break;\n      default: return;\n    }\n  }\n\n  function quantizeFeature(o) {\n    quantizeGeometry(o.geometry);\n  }\n\n  if (o) switch (o.type) {\n    case \"Feature\": quantizeFeature(o); break;\n    case \"FeatureCollection\": o.features.forEach(quantizeFeature); break;\n    default: quantizeGeometry(o); break;\n  }\n\n  return o;\n}\n","import {abs, acos, asin, atan, cos, epsilon, pi, sin, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [\n      sin(E) * cotPhi,\n      phi + (1 - cos(E)) * cotPhi - phi0\n    ];\n  }\n\n  // TODO return null for points outside outline.\n  forward.invert = function(x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10, delta;\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [\n      sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(rectangularPolyconicRaw)\n      .scale(131.215);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians} from \"./math\";\n\nvar K = [\n  [0.9986, -0.062],\n  [1.0000, 0.0000],\n  [0.9986, 0.0620],\n  [0.9954, 0.1240],\n  [0.9900, 0.1860],\n  [0.9822, 0.2480],\n  [0.9730, 0.3100],\n  [0.9600, 0.3720],\n  [0.9427, 0.4340],\n  [0.9216, 0.4958],\n  [0.8962, 0.5571],\n  [0.8679, 0.6176],\n  [0.8350, 0.6769],\n  [0.7986, 0.7346],\n  [0.7597, 0.7903],\n  [0.7186, 0.8435],\n  [0.6732, 0.8936],\n  [0.6213, 0.9394],\n  [0.5722, 0.9761],\n  [0.5322, 1.0000]\n];\n\nK.forEach(function(d) {\n  d[1] *= 1.0144;\n});\n\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [\n    lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)\n  ];\n}\n\nrobinsonRaw.invert = function(x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50, delta;\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n      break;\n    }\n  } while (--i0 >= 0);\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [\n    x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    phi * radians\n  ];\n};\n\nexport default function() {\n  return projection(robinsonRaw)\n      .scale(152.63);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {acos, asin, atan2, cos, degrees, radians, sin, sqrt} from \"./math\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [\n      k * cosPhi * sin(lambda),\n      k * sin(phi)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [\n      atan2(x * sinc, rho * sqrt(1 - sinc * sinc)),\n      rho ? asin(y * sinc / rho) : 0\n    ];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [\n      coordinates[0] * cosOmega / A,\n      y / A\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega);\n\n  // As a multiple of radius.\n  p.distance = function(_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function(_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p\n      .scale(432.147)\n      .clipAngle(acos(1 / distance) * degrees - 1e-6);\n}\n","var epsilon = 1e-4,\n    epsilonInverse = 1e4,\n    x0 = -180, x0e = x0 + epsilon,\n    x1 = 180, x1e = x1 - epsilon,\n    y0 = -90, y0e = y0 + epsilon,\n    y1 = 90, y1e = y1 - epsilon;\n\nfunction quantize(x) {\n  return Math.floor(x * epsilonInverse) / epsilonInverse;\n}\n\nfunction normalizePoint(y) {\n  return y === y0 || y === y1\n      ? [0, y] // pole\n      : [x0, quantize(y)]; // antimeridian\n}\n\nfunction clampPoint(p) {\n  if (p[0] <= x0e) p[0] = x0;\n  else if (p[0] >= x1e) p[0] = x1;\n  if (p[1] <= y0e) p[1] = y0;\n  else if (p[1] >= y1e) p[1] = y1;\n}\n\nfunction clampPoints(points) {\n  points.forEach(clampPoint);\n}\n\n// For each ring, detect where it crosses the antimeridian or pole.\nfunction extractFragments(polygon, fragments) {\n  for (var j = 0, m = polygon.length; j < m; ++j) {\n    var ring = polygon[j];\n    ring.polygon = polygon;\n\n    // By default, assume that this ring doesn’t need any stitching.\n    fragments.push(ring);\n\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      var point = ring[i],\n          x = point[0],\n          y = point[1];\n\n      // If this is an antimeridian or polar point…\n      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n        clampPoint(point);\n\n        // Advance through any antimeridian or polar points…\n        for (var k = i + 1; k < n; ++k) {\n          var pointk = ring[k],\n              xk = pointk[0],\n              yk = pointk[1];\n          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n        }\n\n        // If this was just a single antimeridian or polar point,\n        // we don’t need to cut this ring into a fragment;\n        // we can just leave it as-is.\n        if (k === i + 1) continue;\n\n        // Otherwise, if this is not the first point in the ring,\n        // cut the current fragment so that it ends at the current point.\n        // The current point is also normalized for later joining.\n        if (i) {\n          var fragmentBefore = ring.slice(0, i + 1);\n          fragmentBefore.polygon = polygon;\n          fragmentBefore[fragmentBefore.length - 1] = normalizePoint(y);\n          fragments[fragments.length - 1] = fragmentBefore;\n        }\n\n        // If the ring started with an antimeridian fragment,\n        // we can ignore that fragment entirely.\n        else fragments.pop();\n\n        // If the remainder of the ring is an antimeridian fragment,\n        // move on to the next ring.\n        if (k >= n) break;\n\n        // Otherwise, add the remaining ring fragment and continue.\n        fragments.push(ring = ring.slice(k - 1));\n        ring[0] = normalizePoint(ring[0][1]);\n        ring.polygon = polygon;\n        i = -1;\n        n = ring.length;\n      }\n    }\n  }\n  polygon.length = 0;\n}\n\n// Now stitch the fragments back together into rings.\n// TODO remove empty polygons.\nfunction stitchFragments(fragments) {\n  var i, n = fragments.length;\n\n  // To connect the fragments start-to-end, create a simple index by end.\n  var fragmentByStart = {},\n      fragmentByEnd = {},\n      fragment,\n      start,\n      startFragment,\n      end,\n      endFragment;\n\n  // For each fragment…\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    start = fragment[0];\n    end = fragment[fragment.length - 1];\n\n    // If this fragment is closed, add it as a standalone ring.\n    if (start[0] === end[0] && start[1] === end[1]) {\n      fragment.polygon.push(fragment);\n      fragments[i] = null;\n      continue;\n    }\n\n    fragment.index = i;\n    fragmentByStart[start] = fragmentByEnd[end] = fragment;\n  }\n\n  // For each open fragment…\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    if (fragment) {\n      start = fragment[0];\n      end = fragment[fragment.length - 1];\n      startFragment = fragmentByEnd[start];\n      endFragment = fragmentByStart[end];\n\n      delete fragmentByStart[start];\n      delete fragmentByEnd[end];\n\n      // If this fragment is closed, add it as a standalone ring.\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment);\n        continue;\n      }\n\n      if (startFragment) {\n        delete fragmentByEnd[start];\n        delete fragmentByStart[startFragment[0]];\n        startFragment.pop(); // drop the shared coordinate\n        fragments[startFragment.index] = null;\n        fragment = startFragment.concat(fragment);\n        fragment.polygon = startFragment.polygon;\n\n        if (startFragment === endFragment) {\n          // Connect both ends to this single fragment to create a ring.\n          fragment.polygon.push(fragment);\n        } else {\n          fragment.index = n++;\n          fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n        }\n      } else if (endFragment) {\n        delete fragmentByStart[end];\n        delete fragmentByEnd[endFragment[endFragment.length - 1]];\n        fragment.pop(); // drop the shared coordinate\n        fragment = fragment.concat(endFragment);\n        fragment.polygon = endFragment.polygon;\n        fragment.index = n++;\n        fragments[endFragment.index] = null;\n        fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n      } else {\n        fragment.push(fragment[0]); // close ring\n        fragment.polygon.push(fragment);\n      }\n    }\n  }\n}\n\nfunction stitchFeature(o) {\n  stitchGeometry(o.geometry);\n}\n\nfunction stitchGeometry(o) {\n  if (!o) return;\n  var fragments, i, n;\n\n  switch (o.type) {\n    case \"GeometryCollection\": {\n      o.geometries.forEach(stitchGeometry);\n      return;\n    }\n    case \"Point\": {\n      clampPoint(o.coordinates);\n      break;\n    }\n    case \"MultiPoint\":\n    case \"LineString\": {\n      clampPoints(o.coordinates);\n      break;\n    }\n    case \"MultiLineString\": {\n      o.coordinates.forEach(clampPoints);\n      break;\n    }\n    case \"Polygon\": {\n      extractFragments(o.coordinates, fragments = []);\n      break;\n    }\n    case \"MultiPolygon\": {\n      fragments = [], i = -1, n = o.coordinates.length;\n      while (++i < n) extractFragments(o.coordinates[i], fragments);\n      break;\n    }\n    default: return;\n  }\n\n  stitchFragments(fragments);\n}\n\nexport default function(o) {\n  if (o) switch (o.type) {\n    case \"Feature\": stitchFeature(o); break;\n    case \"FeatureCollection\": o.features.forEach(stitchFeature); break;\n    default: stitchGeometry(o); break;\n  }\n  return o;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, quarterPi, sin, tan} from \"./math\";\n\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [\n    lambda * (0.74482 - 0.34588 * s * s),\n    1.70711 * t\n  ];\n}\n\ntimesRaw.invert = function(x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [\n    x / (0.74482 - 0.34588 * s * s),\n    2 * atan(t)\n  ];\n};\n\nexport default function() {\n  return projection(timesRaw)\n      .scale(146.153);\n}\n","import {geoInterpolate as interpolate, geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {asin, degrees, pi, sin, radians} from \"./math\";\n\n// Compute the origin as the midpoint of the two reference points.\n// Rotate one of the reference points by the origin.\n// Apply the spherical law of sines to compute gamma rotation.\nexport default function(raw, p0, p1) {\n  var i = interpolate(p0, p1),\n      o = i(0.5),\n      a = rotation([-o[0], -o[1]])(p0),\n      b = i.distance / 2,\n      y = -asin(sin(a[1] * radians) / sin(b)),\n      R = [-o[0], -o[1], -(a[0] > 0 ? pi - y : y) * degrees],\n      p = projection(raw(b)).rotate(R),\n      r = rotation(R),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p\n      .clipAngle(90);\n}\n","import {geoGnomonicRaw as gnomonicRaw} from \"d3-geo\";\nimport {cos} from \"./math\";\nimport twoPoint from \"./twoPoint\";\n\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\n\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39])\n      .clipAngle(60)\n      .scale(400);\n}\n\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}\n","import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {acos, atan2, cos, sin, sqrt, tan} from \"./math\";\nimport twoPoint from \"./twoPoint\";\n\n// TODO clip to ellipse\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [\n      (za - zb) / (2 * z0),\n      ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [\n      atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0),\n      (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)\n    ];\n  };\n\n  return forward;\n}\n\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39])\n      .clipAngle(130)\n      .scale(122.571);\n}\n\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [\n    sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2,\n    sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2\n  ];\n}\n\nvanDerGrintenRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [\n    pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x),\n    sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrintenRaw)\n      .scale(79.4183);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [\n    sign(lambda) * pi * x1,\n    sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))\n  ];\n}\n\nvanDerGrinten2Raw.invert = function(x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [\n    sign(x) * pi * (B - A),\n    sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten2Raw)\n      .scale(79.4183);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [\n    pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A),\n    pi * y1\n  ];\n}\n\nvanDerGrinten3Raw.invert = function(x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [\n    x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0,\n    halfPi * sin(2 * atan(y1))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten3Raw)\n        .scale(79.4183);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, halfPi, pi, sign, sqrt} from \"./math\";\n\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [\n    sign(lambda) * halfPi * x1,\n    sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)\n  ];\n}\n\nvanDerGrinten4Raw.invert = function(x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n  return [\n    sign(x) * (sqrt(D * D + 4) + D) * pi / 4,\n    halfPi * B\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten4Raw)\n      .scale(127.16);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {sqrt, pi} from \"./math\";\nimport {mollweideBromleyRaw} from \"./mollweide\";\n\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\n\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\n\nexport default function() {\n  return projection(wagner4Raw)\n      .scale(176.84);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math\";\n\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function(x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function() {\n  return projection(wagner6Raw)\n      .scale(152.63);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt, tan} from \"./math\";\n\nexport function wagner7Raw(lambda, phi) {\n  var s = 0.90631 * sin(phi),\n      c0 = sqrt(1 - s * s),\n      c1 = sqrt(2 / (1 + c0 * cos(lambda /= 3)));\n  return [\n    2.66723 * c0 * c1 * sin(lambda),\n    1.24104 * s * c1\n  ];\n}\n\nwagner7Raw.invert = function(x, y) {\n  var t1 = x / 2.66723,\n      t2 = y / 1.24104,\n      p = sqrt(t1 * t1 + t2 * t2),\n      c = 2 * asin(p / 2);\n  return [\n    3 * atan2(x * tan(c), 2.66723 * p),\n    p && asin(y * sin(c) / (1.24104 * 0.90631 * p))\n  ];\n};\n\nexport default function() {\n  return projection(wagner7Raw)\n      .scale(172.632);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [\n    sinLambda * cosPhi - cosLambda * sin1_Phi,\n    -cosLambda * cosPhi - sinLambda * sin1_Phi\n  ];\n}\n\nwiechelRaw.invert = function(x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [\n    atan2(k * b, D * (1 + w)),\n    D ? -asin(k * a / D) : 0\n  ];\n};\n\nexport default function() {\n  return projection(wiechelRaw)\n      .rotate([0, -90, 45])\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {aitoffRaw} from \"./aitoff\";\nimport {halfPi, epsilon, sin, cos, sqrt, abs, acos} from \"./math\";\n\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [\n    (coordinates[0] + lambda / halfPi) / 2,\n    (coordinates[1] + phi) / 2\n  ];\n}\n\nwinkel3Raw.invert = function(x, y) {\n  var lambda = x, phi = y, i = 25;\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(winkel3Raw)\n      .scale(158.837);\n}\n","export {default as geoAiry, airyRaw as geoAiryRaw} from \"./src/airy\";\nexport {default as geoAitoff, aitoffRaw as geoAitoffRaw} from \"./src/aitoff\";\nexport {default as geoArmadillo, armadilloRaw as geoArmadilloRaw} from \"./src/armadillo\";\nexport {default as geoAugust, augustRaw as geoAugustRaw} from \"./src/august\";\nexport {default as geoBaker, bakerRaw as geoBakerRaw} from \"./src/baker\";\nexport {default as geoBerghaus, berghausRaw as geoBerghausRaw} from \"./src/berghaus\";\nexport {default as geoBoggs, boggsRaw as geoBoggsRaw} from \"./src/boggs\";\nexport {default as geoBonne, bonneRaw as geoBonneRaw} from \"./src/bonne\";\nexport {default as geoBottomley, bottomleyRaw as geoBottomleyRaw} from \"./src/bottomley\";\nexport {default as geoBromley, bromleyRaw as geoBromleyRaw} from \"./src/bromley\";\nexport {default as geoChamberlin, chamberlinRaw as geoChamberlinRaw, chamberlinAfrica as geoChamberlinAfrica} from \"./src/chamberlin\";\nexport {default as geoCollignon, collignonRaw as geoCollignonRaw} from \"./src/collignon\";\nexport {default as geoCraig, craigRaw as geoCraigRaw} from \"./src/craig\";\nexport {default as geoCraster, crasterRaw as geoCrasterRaw} from \"./src/craster\";\nexport {default as geoCylindricalEqualArea, cylindricalEqualAreaRaw as geoCylindricalEqualAreaRaw} from \"./src/cylindricalEqualArea\";\nexport {default as geoCylindricalStereographic, cylindricalStereographicRaw as geoCylindricalStereographicRaw} from \"./src/cylindricalStereographic\";\nexport {default as geoEckert1, eckert1Raw as geoEckert1Raw} from \"./src/eckert1.js\";\nexport {default as geoEckert2, eckert2Raw as geoEckert2Raw} from \"./src/eckert2.js\";\nexport {default as geoEckert3, eckert3Raw as geoEckert3Raw} from \"./src/eckert3.js\";\nexport {default as geoEckert4, eckert4Raw as geoEckert4Raw} from \"./src/eckert4.js\";\nexport {default as geoEckert5, eckert5Raw as geoEckert5Raw} from \"./src/eckert5.js\";\nexport {default as geoEckert6, eckert6Raw as geoEckert6Raw} from \"./src/eckert6.js\";\nexport {default as geoEisenlohr, eisenlohrRaw as geoEisenlohrRaw} from \"./src/eisenlohr.js\";\nexport {default as geoFahey, faheyRaw as geoFaheyRaw} from \"./src/fahey.js\";\nexport {default as geoFoucaut, foucautRaw as geoFoucautRaw} from \"./src/foucaut.js\";\nexport {default as geoGilbert} from \"./src/gilbert.js\";\nexport {default as geoGingery, gingeryRaw as geoGingeryRaw} from \"./src/gingery.js\";\nexport {default as geoGinzburg4, ginzburg4Raw as geoGinzburg4Raw} from \"./src/ginzburg4.js\";\nexport {default as geoGinzburg5, ginzburg5Raw as geoGinzburg5Raw} from \"./src/ginzburg5.js\";\nexport {default as geoGinzburg6, ginzburg6Raw as geoGinzburg6Raw} from \"./src/ginzburg6.js\";\nexport {default as geoGinzburg8, ginzburg8Raw as geoGinzburg8Raw} from \"./src/ginzburg8.js\";\nexport {default as geoGinzburg9, ginzburg9Raw as geoGinzburg9Raw} from \"./src/ginzburg9.js\";\nexport {default as geoGringorten, gringortenRaw as geoGringortenRaw} from \"./src/gringorten.js\";\nexport {default as geoGuyou, guyouRaw as geoGuyouRaw} from \"./src/guyou.js\";\nexport {default as geoHammer, hammerRaw as geoHammerRaw} from \"./src/hammer.js\";\nexport {default as geoHammerRetroazimuthal, hammerRetroazimuthalRaw as geoHammerRetroazimuthalRaw} from \"./src/hammerRetroazimuthal.js\";\nexport {default as geoHealpix, healpixRaw as geoHealpixRaw} from \"./src/healpix.js\";\nexport {default as geoHill, hillRaw as geoHillRaw} from \"./src/hill.js\";\nexport {default as geoHomolosine, homolosineRaw as geoHomolosineRaw} from \"./src/homolosine.js\";\nexport {default as geoInterrupt} from \"./src/interrupted/index\";\nexport {default as geoInterruptedBoggs} from \"./src/interrupted/boggs\";\nexport {default as geoInterruptedHomolosine} from \"./src/interrupted/homolosine\";\nexport {default as geoInterruptedMollweide} from \"./src/interrupted/mollweide\";\nexport {default as geoInterruptedMollweideHemispheres} from \"./src/interrupted/mollweideHemispheres\";\nexport {default as geoInterruptedSinuMollweide} from \"./src/interrupted/sinuMollweide\";\nexport {default as geoInterruptedSinusoidal} from \"./src/interrupted/sinusoidal\";\nexport {default as geoKavrayskiy7, kavrayskiy7Raw as geoKavrayskiy7Raw} from \"./src/kavrayskiy7.js\";\nexport {default as geoLagrange, lagrangeRaw as geoLagrangeRaw} from \"./src/lagrange.js\";\nexport {default as geoLarrivee, larriveeRaw as geoLarriveeRaw} from \"./src/larrivee\";\nexport {default as geoLaskowski, laskowskiRaw as geoLaskowskiRaw} from \"./src/laskowski\";\nexport {default as geoLittrow, littrowRaw as geoLittrowRaw} from \"./src/littrow.js\";\nexport {default as geoLoximuthal, loximuthalRaw as geoLoximuthalRaw} from \"./src/loximuthal.js\";\nexport {default as geoMiller, millerRaw as geoMillerRaw} from \"./src/miller\";\nexport {default as geoModifiedStereographic, modifiedStereographicRaw as geoModifiedStereographicRaw, modifiedStereographicAlaska as geoModifiedStereographicAlaska, modifiedStereographicGs48 as geoModifiedStereographicGs48, modifiedStereographicGs50 as geoModifiedStereographicGs50, modifiedStereographicMiller as geoModifiedStereographicMiller, modifiedStereographicLee as geoModifiedStereographicLee} from \"./src/modifiedStereographic\";\nexport {default as geoMollweide, mollweideRaw as geoMollweideRaw} from \"./src/mollweide\";\nexport {default as geoMtFlatPolarParabolic, mtFlatPolarParabolicRaw as geoMtFlatPolarParabolicRaw} from \"./src/mtFlatPolarParabolic\";\nexport {default as geoMtFlatPolarQuartic, mtFlatPolarQuarticRaw as geoMtFlatPolarQuarticRaw} from \"./src/mtFlatPolarQuartic\";\nexport {default as geoMtFlatPolarSinusoidal, mtFlatPolarSinusoidalRaw as geoMtFlatPolarSinusoidalRaw} from \"./src/mtFlatPolarSinusoidal\";\nexport {default as geoNaturalEarth, naturalEarthRaw as geoNaturalEarthRaw} from \"./src/naturalEarth\";\nexport {default as geoNellHammer, nellHammerRaw as geoNellHammerRaw} from \"./src/nellHammer\";\nexport {default as geoPatterson, pattersonRaw as geoPattersonRaw} from \"./src/patterson\";\nexport {default as geoPolyconic, polyconicRaw as geoPolyconicRaw} from \"./src/polyconic\";\nexport {default as geoPolyhedral} from \"./src/polyhedral/index.js\";\nexport {default as geoPolyhedralButterfly} from \"./src/polyhedral/butterfly.js\";\nexport {default as geoPolyhedralCollignon} from \"./src/polyhedral/collignon.js\";\nexport {default as geoPolyhedralWaterman} from \"./src/polyhedral/waterman.js\";\nexport {default as geoProject} from \"./src/project/index\";\nexport {default as geoGringortenQuincuncial} from \"./src/quincuncial/gringorten.js\";\nexport {default as geoPeirceQuincuncial} from \"./src/quincuncial/peirce.js\";\nexport {default as geoPierceQuincuncial} from \"./src/quincuncial/peirce.js\"; // DEPRECATED misspelling\nexport {default as geoQuantize} from \"./src/quantize\";\nexport {default as geoQuincuncial} from \"./src/quincuncial/index.js\";\nexport {default as geoRectangularPolyconic, rectangularPolyconicRaw as geoRectangularPolyconicRaw} from \"./src/rectangularPolyconic\";\nexport {default as geoRobinson, robinsonRaw as geoRobinsonRaw} from \"./src/robinson\";\nexport {default as geoSatellite, satelliteRaw as geoSatelliteRaw} from \"./src/satellite\";\nexport {default as geoSinuMollweide, sinuMollweideRaw as geoSinuMollweideRaw} from \"./src/sinuMollweide\";\nexport {default as geoSinusoidal, sinusoidalRaw as geoSinusoidalRaw} from \"./src/sinusoidal\";\nexport {default as geoStitch} from \"./src/stitch\";\nexport {default as geoTimes, timesRaw as geoTimesRaw} from \"./src/times\";\nexport {default as geoTwoPointAzimuthal, twoPointAzimuthalRaw as geoTwoPointAzimuthalRaw, twoPointAzimuthalUsa as geoTwoPointAzimuthalUsa} from \"./src/twoPointAzimuthal\";\nexport {default as geoTwoPointEquidistant, twoPointEquidistantRaw as geoTwoPointEquidistantRaw, twoPointEquidistantUsa as geoTwoPointEquidistantUsa} from \"./src/twoPointEquidistant\";\nexport {default as geoVanDerGrinten, vanDerGrintenRaw as geoVanDerGrintenRaw} from \"./src/vanDerGrinten\";\nexport {default as geoVanDerGrinten2, vanDerGrinten2Raw as geoVanDerGrinten2Raw} from \"./src/vanDerGrinten2\";\nexport {default as geoVanDerGrinten3, vanDerGrinten3Raw as geoVanDerGrinten3Raw} from \"./src/vanDerGrinten3\";\nexport {default as geoVanDerGrinten4, vanDerGrinten4Raw as geoVanDerGrinten4Raw} from \"./src/vanDerGrinten4\";\nexport {default as geoWagner4, wagner4Raw as geoWagner4Raw} from \"./src/wagner4.js\";\nexport {default as geoWagner6, wagner6Raw as geoWagner6Raw} from \"./src/wagner6.js\";\nexport {default as geoWagner7, wagner7Raw as geoWagner7Raw} from \"./src/wagner7.js\";\nexport {default as geoWiechel, wiechelRaw as geoWiechelRaw} from \"./src/wiechel.js\";\nexport {default as geoWinkel3, winkel3Raw as geoWinkel3Raw} from \"./src/winkel3\";\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity\";\n\nexport default function(topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n    return point;\n  };\n}\n","import transform from \"./transform\";\n\nexport default function(topology) {\n  var bbox = topology.bbox;\n\n  function bboxPoint(p0) {\n    p1[0] = p0[0], p1[1] = p0[1], t(p1);\n    if (p1[0] < x0) x0 = p1[0];\n    if (p1[0] > x1) x1 = p1[0];\n    if (p1[1] < y0) y0 = p1[1];\n    if (p1[1] > y1) y1 = p1[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  if (!bbox) {\n    var t = transform(topology), p0, p1 = new Array(2), name,\n        x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n    topology.arcs.forEach(function(arc) {\n      var i = -1, n = arc.length;\n      while (++i < n) {\n        p0 = arc[i], p1[0] = p0[0], p1[1] = p0[1], t(p1, i);\n        if (p1[0] < x0) x0 = p1[0];\n        if (p1[0] > x1) x1 = p1[0];\n        if (p1[1] < y0) y0 = p1[1];\n        if (p1[1] > y1) y1 = p1[1];\n      }\n    });\n\n    for (name in topology.objects) {\n      bboxGeometry(topology.objects[name]);\n    }\n\n    bbox = topology.bbox = [x0, y0, x1, y1];\n  }\n\n  return bbox;\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import reverse from \"./reverse\";\nimport transform from \"./transform\";\n\nexport default function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k].slice(), k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p.slice());\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n","export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n","import bisect from \"./bisect\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n","import bbox from \"./bbox\";\n\nexport default function(topology, n) {\n  if (!((n = Math.floor(n)) >= 2)) throw new Error(\"n must be ≥2\");\n  if (topology.transform) throw new Error(\"already quantized\");\n  var bb = bbox(topology), name,\n      dx = bb[0], kx = (bb[2] - dx) / (n - 1) || 1,\n      dy = bb[1], ky = (bb[3] - dy) / (n - 1) || 1;\n\n  function quantizePoint(p) {\n    p[0] = Math.round((p[0] - dx) / kx);\n    p[1] = Math.round((p[1] - dy) / ky);\n  }\n\n  function quantizeGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(quantizeGeometry); break;\n      case \"Point\": quantizePoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(quantizePoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = 1,\n        j = 1,\n        n = arc.length,\n        pi = arc[0],\n        x0 = pi[0] = Math.round((pi[0] - dx) / kx),\n        y0 = pi[1] = Math.round((pi[1] - dy) / ky),\n        pj,\n        x1,\n        y1;\n\n    for (; i < n; ++i) {\n      pi = arc[i];\n      x1 = Math.round((pi[0] - dx) / kx);\n      y1 = Math.round((pi[1] - dy) / ky);\n      if (x1 !== x0 || y1 !== y0) {\n        pj = arc[j++];\n        pj[0] = x1 - x0, x0 = x1;\n        pj[1] = y1 - y0, y0 = y1;\n      }\n    }\n\n    if (j < 2) {\n      pj = arc[j++];\n      pj[0] = 0;\n      pj[1] = 0;\n    }\n\n    arc.length = j;\n  });\n\n  for (name in topology.objects) {\n    quantizeGeometry(topology.objects[name]);\n  }\n\n  topology.transform = {\n    scale: [kx, ky],\n    translate: [dx, dy]\n  };\n\n  return topology;\n}\n","import identity from \"./identity\";\n\nexport default function(topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0, x0 = x1;\n    point[1] = y1 - y0, y0 = y1;\n    return point;\n  };\n}\n","export {default as bbox} from \"./src/bbox\";\nexport {default as feature} from \"./src/feature\";\nexport {default as mesh, meshArcs} from \"./src/mesh\";\nexport {default as merge, mergeArcs} from \"./src/merge\";\nexport {default as neighbors} from \"./src/neighbors\";\nexport {default as quantize} from \"./src/quantize\";\nexport {default as transform} from \"./src/transform\";\nexport {default as untransform} from \"./src/untransform\";\n","export default [\n  {\n    location: \"Atlanta\",\n    lat: 33.748995,\n    lng: -84.387982,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Austin\",\n    lat: 30.267153,\n    lng: -97.743061,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Australia\",\n    lat: -25.274398,\n    lng: 133.775136,\n    country: \"Australia\",\n    chapter: true\n  },\n  {\n    location: \"Baltimore\",\n    lat: 39.290385,\n    lng: -76.612189,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Bay Area\",\n    lat: 37.827178,\n    lng: -122.291308,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Boston\",\n    lat: 42.360083,\n    lng: -71.05888,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Brasil\",\n    lat: -14.235004,\n    lng: -51.92528,\n    country: \"Brazil\",\n    chapter: true\n  },\n  {\n    location: \"Chicago\",\n    lat: 41.878114,\n    lng: -87.629798,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"DC\",\n    lat: 38.907192,\n    lng: -77.036871,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Dallas\",\n    lat: 32.776664,\n    lng: -96.796988,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Detroit\",\n    lat: 42.331427,\n    lng: -83.045754,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Deutschland\",\n    lat: 51.165691,\n    lng: 10.451526,\n    country: \"Germany\",\n    chapter: true\n  },\n  {\n    location: \"GWU UK\",\n    lat: 55.378051,\n    lng: -3.435973,\n    country: \"United Kingdom\",\n    chapter: true\n  },\n  {\n    location: \"Los Angeles\",\n    lat: 34.052234,\n    lng: -118.243685,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Montréal\",\n    lat: 45.501689,\n    lng: -73.567256,\n    country: \"Canada\",\n    chapter: true\n  },\n  {\n    location: \"New York City\",\n    lat: 40.712775,\n    lng: -74.005973,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Orange County\",\n    lat: 33.717471,\n    lng: -117.831143,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Orlando\",\n    lat: 28.538336,\n    lng: -81.379236,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Ottawa\",\n    lat: 45.42153,\n    lng: -75.697193,\n    country: \"Canada\",\n    chapter: true\n  },\n  {\n    location: \"STJV\",\n    lat: 46.227638,\n    lng: 2.213749,\n    country: \"France\",\n    chapter: true\n  },\n  {\n    location: \"Seattle\",\n    lat: 47.60621,\n    lng: -122.332071,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Spain\",\n    lat: 40.463667,\n    lng: -3.74922,\n    country: \"Spain\",\n    chapter: true\n  },\n  {\n    location: \"Sweden\",\n    lat: 60.128161,\n    lng: 18.643501,\n    country: \"Sweden\",\n    chapter: true\n  },\n  {\n    location: \"Toronto\",\n    lat: 43.653226,\n    lng: -79.383184,\n    country: \"Canada\",\n    chapter: true\n  },\n  {\n    location: \"Triangle\",\n    lat: 35.899168,\n    lng: -78.86364,\n    country: \"USA\",\n    chapter: true\n  },\n  {\n    location: \"Vancouver\",\n    lat: 49.282729,\n    lng: -123.120738,\n    country: \"Canada\",\n    chapter: true\n  },\n  {\n    location: \"Italy\",\n    lat: 41.87194,\n    lng: 12.56738,\n    country: \"Italy\",\n    chapter: false\n  },\n  {\n    location: \"Nashville\",\n    lat: 36.162664,\n    lng: -86.781602,\n    country: \"USA\",\n    chapter: false\n  },\n  {\n    location: \"Russia\",\n    lat: 55.755826,\n    lng: 37.6173,\n    country: \"Russia\",\n    chapter: true\n  },\n  {\n    location: \"Taipei\",\n    lat: 25.032969,\n    lng: 121.565418,\n    country: \"Taiwan\",\n    chapter: false\n  },\n  {\n    location: \"Mexico\",\n    lat: 23.634501,\n    lng: -102.552784,\n    country: \"Mexico\",\n    chapter: false\n  },\n  {\n    location: \"Prague\",\n    lat: 49.817492,\n    lng: 15.472962,\n    country: \"Czech Republic\",\n    chapter: false\n  },\n  {\n    location: \"Indiana\",\n    lat: 40.267194,\n    lng: -86.134902,\n    country: \"USA\",\n    chapter: false\n  },\n  {\n    location: \"Utah\",\n    lat: 39.32098,\n    lng: -111.093731,\n    country: \"USA\",\n    chapter: false\n  },\n  {\n    location: \"Bucaramanga\",\n    lat: 7.119349,\n    lng: -73.122742,\n    country: \"Colombia\",\n    chapter: false\n  },\n  {\n    location: \"Lewiston, Maine\",\n    lat: 44.100351,\n    lng: -70.214776,\n    country: \"USA\",\n    chapter: false\n  },\n  {\n    location: \"Madison, Wisconsin\",\n    lat: 43.073052,\n    lng: -89.40123,\n    country: \"USA\",\n    chapter: false\n  },\n  {\n    location: \"Poland\",\n    lat: 51.919438,\n    lng: 19.145136,\n    country: \"Poland\",\n    chapter: true\n  },\n  {\n    location: \"Ukraine\",\n    lat: 48.379433,\n    lng: 31.16558,\n    country: \"Ukraine\",\n    chapter: true\n  },\n  {\n    location: \"Las Vegas\",\n    lat: 36.169941,\n    lng: -115.13983,\n    country: \"USA\",\n    chapter: false\n  },\n  {\n    location: \"Ireland\",\n    lat: 53.349805,\n    lng: -6.26031,\n    country: \"Ireland\",\n    chapter: true\n  },\n  {\n    location: \"Alberta\",\n    lat: 53.933271,\n    lng: -116.576503,\n    country: \"Canada\",\n    chapter: false\n  },\n  {\n    location: \"Thailand\",\n    lat: 15.870032,\n    lng: 100.992541,\n    country: \"Thailand\",\n    chapter: false\n  },\n  {\n    location: \"India\",\n    lat: 20.593684,\n    lng: 78.96288,\n    country: \"India\",\n    chapter: false\n  },\n  {\n    location: \"Japan\",\n    lat: 36.204824,\n    lng: 138.252924,\n    country: \"Japan\",\n    chapter: false\n  },\n  {\n    location: \"Korea\",\n    lat: 37.663998,\n    lng: 127.978458,\n    country: \"Korea\",\n    chapter: false\n  },\n  {\n    location: \"Malaysia\",\n    lat: 4.210484,\n    lng: 101.975766,\n    country: \"Malaysia\",\n    chapter: true\n  },\n  {\n    location: \"Vietnam\",\n    lat: 14.058324,\n    lng: 108.277199,\n    country: \"Vietnam\",\n    chapter: false\n  },\n  {\n    location: \"The Netherlands\",\n    lat: 52.132633,\n    lng: 5.291266,\n    country: \"The Netherlands\",\n    chapter: false\n  },\n  {\n    location: \"Belgium\",\n    lat: 50.503887,\n    lng: 4.469936,\n    country: \"Belgium\",\n    chapter: false\n  },\n  {\n    location: \"Finland\",\n    lat: 61.92411,\n    lng: 25.748151,\n    country: \"Finland\",\n    chapter: false\n  },\n  {\n    location: \"Argentina\",\n    lat: -38.416097,\n    lng: -63.616672,\n    country: \"Argentina\",\n    chapter: true\n  },\n  {\n    location: \"New Zealand\",\n    lat: -40.900557,\n    lng: 174.885971,\n    country: \"New Zealand\",\n    chapter: false\n  }\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst red = \"#e5261a\";\n\nfunction MarkerPath({ fill, stroke, strokeWidth }) {\n  return (\n    <path\n      fill={fill}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      d={`\n        M-78.736,56.784c-89.734,0-162.725,73.003-162.725,162.732c0,36.571,25.572,94.673,76.01,172.686\n        c36.714,56.783,73.96,104.287,74.33,104.75c2.985,3.807,7.553,6.018,12.379,6.018c4.829,0,9.396-2.211,12.381-6.018\n        c0.37-0.463,37.622-47.971,74.33-104.75c50.438-78.013,76.012-136.121,76.012-172.686\n        C83.993,129.787,10.999,56.784-78.736,56.784z\n        M-140.173,241.81c-3.481,2.971-7.626,5.503-12.439,7.6\n        c-4.804,2.094-10.303,3.146-16.504,3.146c-5.293,0-10.114-0.871-14.47-2.616c-4.357-1.741-8.101-4.16-11.226-7.259\n        c-3.136-3.098-5.571-6.775-7.311-11.037c-1.742-4.259-2.616-8.903-2.616-13.936v-0.197c0-4.838,0.89-9.372,2.662-13.602\n        c1.772-4.222,4.248-7.937,7.405-11.131c3.16-3.193,6.909-5.712,11.234-7.55c4.317-1.839,9.061-2.758,14.228-2.758\n        c3.033,0,5.791,0.208,8.28,0.631c2.481,0.417,4.787,1.016,6.916,1.788c2.136,0.776,4.128,1.745,6.002,2.907\n        c1.876,1.158,3.682,2.481,5.421,3.966l-9.391,11.327c-1.291-1.098-2.583-2.067-3.868-2.906c-1.293-0.834-2.63-1.548-4.018-2.126\n        c-1.395-0.583-2.891-1.033-4.507-1.356c-1.614-0.322-3.387-0.484-5.316-0.484c-2.717,0-5.247,0.565-7.603,1.697\n        c-2.354,1.13-4.419,2.651-6.2,4.562c-1.771,1.906-3.158,4.139-4.158,6.692c-1.001,2.555-1.498,5.289-1.498,8.2v0.193\n        c0,3.104,0.497,5.968,1.498,8.588c1,2.617,2.418,4.898,4.263,6.838c1.835,1.941,4,3.44,6.481,4.513\n        c2.481,1.068,5.247,1.598,8.28,1.598c5.545,0,10.226-1.366,14.03-4.096v-9.749h-14.999v-12.872h29.423V241.81z\n        M-51.398,251.879\n        h-12.977l-15.29-44.337l-15.299,44.337h-12.974l-23.13-68.245h15.969l14.038,45.883l15.195-46.077h12.779l15.195,46.077\n        l14.039-45.883h15.58L-51.398,251.879z\n        M38.676,235.323c-1.395,3.81-3.381,6.988-5.956,9.536\n        c-2.585,2.553-5.712,4.455-9.39,5.711c-3.68,1.26-7.777,1.887-12.298,1.887c-9.099,0-16.262-2.517-21.49-7.551\n        c-5.224-5.033-7.839-12.55-7.839-22.554v-38.718h14.905v38.333c0,5.549,1.291,9.729,3.876,12.532\n        c2.575,2.809,6.161,4.217,10.744,4.217c4.579,0,8.161-1.359,10.746-4.07c2.575-2.71,3.868-6.775,3.868-12.194v-38.817h14.912\n        v38.234C40.755,227.032,40.061,231.518,38.676,235.323z\n      `}\n    />\n  );\n}\n\nfunction SvgContentElementWrapperWithDefs({\n  children,\n  forceGrayscale,\n  ...rest\n}) {\n  return (\n    <React.Fragment>\n      <defs>\n        <filter id=\"grayscale\">\n          <feColorMatrix type=\"saturate\" values=\"0\" />\n        </filter>\n        <pattern\n          id=\"redpattern\"\n          patternUnits=\"userSpaceOnUse\"\n          width=\"8\"\n          height=\"8\"\n        >\n          <rect style={{ opacity: 0.7 }} width=\"8\" height=\"8\" fill={red} />\n        </pattern>\n        <pattern\n          id=\"lessredpattern\"\n          patternUnits=\"userSpaceOnUse\"\n          width=\"8\"\n          height=\"8\"\n        >\n          <rect style={{ opacity: 0.3 }} width=\"8\" height=\"8\" fill={red} />\n        </pattern>\n        <pattern\n          id=\"hardlyredpattern\"\n          patternUnits=\"userSpaceOnUse\"\n          width=\"8\"\n          height=\"8\"\n        >\n          <rect style={{ opacity: 0.04 }} width=\"8\" height=\"8\" fill={red} />\n        </pattern>\n        <g id=\"mapmarker\">\n          <rect\n            x=\"-218.979\"\n            y=\"163.179\"\n            fill=\"#fff\"\n            width=\"279.333\"\n            height=\"106.667\"\n          />\n          <g>\n            <MarkerPath stroke=\"#fff\" strokeWidth={20} />\n            <MarkerPath />\n          </g>\n        </g>\n      </defs>\n      <g filter={forceGrayscale ? \"url(#grayscale)\" : undefined}>\n        {React.cloneElement(children, rest)}\n      </g>\n    </React.Fragment>\n  );\n}\n\nSvgContentElementWrapperWithDefs.propTypes = {\n  children: PropTypes.element.isRequired,\n  forceGrayscale: PropTypes.bool\n};\n\nexport default SvgContentElementWrapperWithDefs;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Marker } from \"react-simple-maps\";\n\nclass GWUMarker extends PureComponent {\n  render() {\n    const { marker, scale, ...rest } = this.props;\n    return (\n      <Marker key={marker.name} marker={marker} {...rest}>\n        <g transform={`scale(${scale}), translate(79, -528)`}>\n          <use href=\"#mapmarker\" />\n        </g>\n      </Marker>\n    );\n  }\n}\n\nGWUMarker.propTypes = {\n  marker: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    // [lng, lat]\n    coordinates: PropTypes.arrayOf(PropTypes.number).isRequired\n  }).isRequired,\n  scale: PropTypes.number.isRequired\n};\n\nGWUMarker.defaultProps = {\n  scale: 0.09\n};\n\nexport default GWUMarker;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers\n} from \"react-simple-maps\";\n\nimport mapPoints from \"./map_data\";\n\nimport SvgContentElementWrapperWithDefs from \"./SvgContentElementWrapperWithDefs\";\nimport GWUMarker from \"./GWUMarker\";\n\nlet smallWorldDataPromise;\nlet worldDataPromise;\nfunction getWorldData() {\n  return (worldDataPromise =\n    worldDataPromise ||\n    fetch((location.pathname + \"/world-50m.json\").replace(/\\/\\//g, \"/\")).then(\n      res => res.json()\n    ));\n}\nfunction getSmallWorldData() {\n  return (smallWorldDataPromise =\n    smallWorldDataPromise ||\n    fetch((location.pathname + \"/world-110m.json\").replace(/\\/\\//g, \"/\")).then(\n      res => res.json()\n    ));\n}\n\nconst markers = mapPoints\n  .filter(point => point.chapter)\n  .sort((a, b) => {\n    // we want to make sure markers lower on the map are painted in front\n    if (a.lat < b.lat) {\n      return 1;\n    }\n    if (a.lat > b.lat) {\n      return -1;\n    }\n    if (a.lng < b.lng) {\n      return 1;\n    }\n    if (a.lng > b.lng) {\n      return -1;\n    }\n    return 0;\n  })\n  .map(point => {\n    return {\n      name: point.location,\n      coordinates: [point.lng, point.lat]\n    };\n  });\n\nconst countryNameKeys = [\n  \"ABBREV\",\n  \"CONTINENT\",\n  \"FORMAL_EN\",\n  \"ISO_A2\",\n  \"ISO_A3\",\n  \"NAME\",\n  \"NAME_LONG\"\n];\nfunction geographyMatchesCountryString(geography, countryString) {\n  return countryNameKeys.some(key => {\n    return geography.properties[key] === countryString;\n  });\n}\n\nclass ChapterMapComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      worldData: null\n    };\n  }\n\n  componentDidMount() {\n    getWorldData().then(worldData => {\n      this.setState({\n        worldData\n      });\n    });\n    getSmallWorldData().then(worldData => {\n      this.setState(state => (state.worldData ? null : { worldData }));\n    });\n  }\n\n  render() {\n    const {\n      centerLat,\n      centerLng,\n      width,\n      height,\n      scale,\n      isGeographyIncluded,\n      markerScale,\n      style,\n      className,\n      forceGrayscale\n    } = this.props;\n    const { worldData } = this.state;\n    return (\n      <div className={className} style={{ ...(style || {}), width, height }}>\n        {!worldData && <div>Loading...</div>}\n        {worldData && (\n          <ComposableMap\n            projectionConfig={{ scale: scale }}\n            width={width}\n            height={height}\n            style={{ width: \"100%\", height: \"auto\" }}\n          >\n            <SvgContentElementWrapperWithDefs forceGrayscale={forceGrayscale}>\n              <ZoomableGroup center={[centerLng, centerLat]} disablePanning>\n                <Geographies geography={this.state.worldData}>\n                  {(geographies, projection) =>\n                    geographies\n                      .filter(isGeographyIncluded)\n                      .map((geography, i) => {\n                        const matchingPoints = mapPoints.filter(point => {\n                          return geographyMatchesCountryString(\n                            geography,\n                            point.country\n                          );\n                        });\n                        const hasChapter = matchingPoints.some(point => {\n                          return point.chapter;\n                        });\n                        let color = \"url(#hardlyredpattern)\";\n                        if (hasChapter) {\n                          color = \"url(#redpattern)\";\n                        } else if (matchingPoints.length) {\n                          color = \"url(#lessredpattern)\";\n                        }\n                        const style = {\n                          fill: color,\n                          stroke: \"#222\",\n                          strokeWidth: 0.5,\n                          outline: \"none\"\n                        };\n                        return (\n                          <Geography\n                            key={i}\n                            geography={geography}\n                            projection={projection}\n                            style={{\n                              default: style,\n                              hover: style,\n                              pressed: style\n                            }}\n                          />\n                        );\n                      })\n                  }\n                </Geographies>\n                <Markers>\n                  {markers.map(marker => {\n                    return (\n                      <GWUMarker\n                        key={marker.name}\n                        marker={marker}\n                        scale={markerScale}\n                      />\n                    );\n                  })}\n                </Markers>\n              </ZoomableGroup>\n            </SvgContentElementWrapperWithDefs>\n          </ComposableMap>\n        )}\n      </div>\n    );\n  }\n}\n\nChapterMapComponent.propTypes = {\n  centerLat: PropTypes.number.isRequired,\n  centerLng: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  scale: PropTypes.number.isRequired,\n  isGeographyIncluded: PropTypes.func.isRequired,\n  markerScale: PropTypes.number.isRequired,\n  forceGrayscale: PropTypes.bool.isRequired\n};\n\nChapterMapComponent.defaultProps = {\n  centerLat: 0,\n  centerLng: 0,\n  width: 980,\n  height: 551,\n  scale: 205,\n  isGeographyIncluded: () => true,\n  markerScale: 0.09,\n  forceGrayscale: false\n};\n\nexport default ChapterMapComponent;\n","import ChapterMapComponent from \"./ChapterMapComponent\";\n\nexport default ChapterMapComponent;\n"],"sourceRoot":""}